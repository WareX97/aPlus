<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="pthread__mutexattr_8c" kind="file">
    <compoundname>pthread_mutexattr.c</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="pthread_8h" local="no">pthread.h</includes>
    <includes refid="pthread__internal_8h" local="yes">pthread_internal.h</includes>
    <incdepgraph>
      <node id="2589">
        <label>stdint.h</label>
      </node>
      <node id="2596">
        <label>errno.h</label>
      </node>
      <node id="2595">
        <label>pthread_internal.h</label>
        <link refid="pthread__internal_8h"/>
        <childnode refid="2596" relation="include">
        </childnode>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
      </node>
      <node id="2588">
        <label>usr/src/libpthread/src/pthread_mutexattr.c</label>
        <link refid="pthread_mutexattr.c"/>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
        <childnode refid="2595" relation="include">
        </childnode>
      </node>
      <node id="2590">
        <label>pthread.h</label>
        <link refid="pthread_8h"/>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
      </node>
      <node id="2591">
        <label>sys/types.h</label>
      </node>
      <node id="2594">
        <label>unistd.h</label>
      </node>
      <node id="2592">
        <label>sys/time.h</label>
      </node>
      <node id="2593">
        <label>sched.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pthread__mutexattr_8c_1a951ee9f0ed108e42ce1f3890e5cfad29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_init</definition>
        <argsstring>(pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutexattr_init</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="8" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="8" bodyend="18"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
        <references refid="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" compoundref="pthread_8h" startline="79">PTHREAD_MUTEX_DEFAULT</references>
      </memberdef>
      <memberdef kind="function" id="pthread__mutexattr_8c_1a428c4ef5c8a65c0c0f3a2e5d97c16101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_destroy</definition>
        <argsstring>(pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutexattr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="20" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="20" bodyend="30"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread__mutexattr_8c_1a059614946cddb4ae7582dae6c046e597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_getpshared</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *pshared)</argsstring>
        <name>pthread_mutexattr_getpshared</name>
        <param>
          <type>const <ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="32" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="32" bodyend="40"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread__mutexattr_8c_1a8b5370e0a2923da165a744ee687c7f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_setpshared</definition>
        <argsstring>(pthread_mutexattr_t *attr, int pshared)</argsstring>
        <name>pthread_mutexattr_setpshared</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="42" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="42" bodyend="50"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread__mutexattr_8c_1a5a64049989f6b78e9d9c6d727c461955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_gettype</definition>
        <argsstring>(pthread_mutexattr_t *attr, int *kind)</argsstring>
        <name>pthread_mutexattr_gettype</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="52" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="52" bodyend="60"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
      </memberdef>
      <memberdef kind="function" id="pthread__mutexattr_8c_1a13c3f57e9d04b73af87fdb0cbac6bd27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref> int</type>
        <definition>PUBLIC int pthread_mutexattr_settype</definition>
        <argsstring>(pthread_mutexattr_t *attr, int kind)</argsstring>
        <name>pthread_mutexattr_settype</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" line="62" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="62" bodyend="70"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pthread_8h" kindref="compound">pthread.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pthread__internal_8h" kindref="compound">pthread_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="pthread__mutexattr_8c_1a951ee9f0ed108e42ce1f3890e5cfad29" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a951ee9f0ed108e42ce1f3890e5cfad29" kindref="member">pthread_mutexattr_init</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" kindref="member">pshared</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" kindref="member">kind</ref><sp/>=<sp/><ref refid="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" kindref="member">PTHREAD_MUTEX_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="pthread__mutexattr_8c_1a428c4ef5c8a65c0c0f3a2e5d97c16101" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a428c4ef5c8a65c0c0f3a2e5d97c16101" kindref="member">pthread_mutexattr_destroy</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" kindref="member">pshared</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" kindref="member">kind</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="pthread__mutexattr_8c_1a059614946cddb4ae7582dae6c046e597" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a059614946cddb4ae7582dae6c046e597" kindref="member">pthread_mutexattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>*pshared<sp/>=<sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" kindref="member">pshared</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="pthread__mutexattr_8c_1a8b5370e0a2923da165a744ee687c7f2e" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a8b5370e0a2923da165a744ee687c7f2e" kindref="member">pthread_mutexattr_setpshared</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" kindref="member">pshared</ref><sp/>=<sp/>pshared;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="pthread__mutexattr_8c_1a5a64049989f6b78e9d9c6d727c461955" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a5a64049989f6b78e9d9c6d727c461955" kindref="member">pthread_mutexattr_gettype</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*kind)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>*kind<sp/>=<sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" kindref="member">kind</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="pthread__mutexattr_8c_1a13c3f57e9d04b73af87fdb0cbac6bd27" refkind="member"><highlight class="normal"><ref refid="pthread__internal_8h_1ad17d551e31d1828c68acf40684849b7e" kindref="member">PUBLIC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread__mutexattr_8c_1a13c3f57e9d04b73af87fdb0cbac6bd27" kindref="member">pthread_mutexattr_settype</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*<ref refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" kindref="member">attr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attr)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>attr-&gt;<ref refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" kindref="member">kind</ref><sp/>=<sp/>kind;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c"/>
  </compounddef>
</doxygen>
