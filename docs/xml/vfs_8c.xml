<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="vfs_8c" kind="file">
    <compoundname>vfs.c</compoundname>
    <includes refid="aplus_8h" local="no">aplus.h</includes>
    <includes refid="fs_8h" local="no">aplus/fs.h</includes>
    <includes refid="list_8h" local="no">aplus/list.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes refid="dirent_8h" local="no">dirent.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="207">
        <label>sys/stat.h</label>
      </node>
      <node id="202">
        <label>stdarg.h</label>
      </node>
      <node id="204">
        <label>aplus/fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>stdint.h</label>
      </node>
      <node id="215">
        <label>setjmp.h</label>
      </node>
      <node id="213">
        <label>aplus/task.h</label>
        <link refid="task_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>errno.h</label>
      </node>
      <node id="216">
        <label>fcntl.h</label>
      </node>
      <node id="205">
        <label>stddef.h</label>
      </node>
      <node id="210">
        <label>aplus/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>aplus.h</label>
        <link refid="aplus_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>src/fs/vfs.c</label>
        <link refid="vfs.c"/>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>sys/types.h</label>
      </node>
      <node id="203">
        <label>string.h</label>
      </node>
      <node id="209">
        <label>unistd.h</label>
      </node>
      <node id="214">
        <label>signal.h</label>
      </node>
      <node id="212">
        <label>aplus/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>sys/dirent.h</label>
        <link refid="dirent_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>aplus/spinlock.h</label>
        <link refid="spinlock_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vfs_8c_1ab78229df5c858687756417b32ac398ff" prot="public" static="yes" mutable="no">
        <type><ref refid="list_8h_1af629e6a6713d7de11eab50cbe6449b06" kindref="member">list_t</ref> *</type>
        <definition>list_t* list_inodes</definition>
        <argsstring></argsstring>
        <name>list_inodes</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="16" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" prot="public" static="yes" mutable="no">
        <type><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref></type>
        <definition>uint32_t nextinode</definition>
        <argsstring></argsstring>
        <name>nextinode</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="17" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vfs_8c_1a9af8258c3554800f6613f8147544225f" prot="public" static="no" mutable="no">
        <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
        <definition>inode_t* vfs_root</definition>
        <argsstring></argsstring>
        <name>vfs_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="19" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vfs_8c_1acb87c78588a46c5526e933c495b69c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vfs_map</definition>
        <argsstring>(inode_t *inode)</argsstring>
        <name>vfs_map</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>inode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="22" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="22" bodyend="25"/>
        <references refid="structinode_1a1a77be0f24a6c9a18bbdbcecfb75df7c" compoundref="fs_8h" startline="40">inode::ino</references>
        <references refid="list_8h_1a945ef9f05b26f6016d2f28ec8836b1f0" compoundref="list_8h" startline="56" endline="71">list_add</references>
        <references refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" compoundref="vfs_8c" startline="17">nextinode</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1a13a7520e2fe9380c3ed93472d0c800bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vfs_umap</definition>
        <argsstring>(inode_t *inode)</argsstring>
        <name>vfs_umap</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>inode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="27" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="27" bodyend="30"/>
        <references refid="mm_8h_1acee1960bdb3a19cb495341ec725cafef" compoundref="mm_8c" startline="66" endline="81">kfree</references>
        <references refid="list_8h_1a4470c240b622941415ae5250067699b5" compoundref="list_8h" startline="73" endline="97">list_remove</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1a99334446cfc1dfc32088d838b4f2895c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
        <definition>inode_t* vfs_mapped</definition>
        <argsstring>(inode_t *parent, char *name)</argsstring>
        <name>vfs_mapped</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="32" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="32" bodyend="42"/>
        <references refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" compoundref="list_8h" startline="175">list_foreach</references>
        <references refid="structinode_1ad64802d9d4ebdd1c56af5ab6e302faf0" compoundref="fs_8h" startline="37">inode::name</references>
        <references refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" compoundref="fs_8h" startline="70">inode::parent</references>
        <references refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" compoundref="attribute_8h" startline="83">value</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1a4f7b5f17ac7c4b3a0a574d9620e0512d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
        <definition>inode_t* vfs_mapped_at_index</definition>
        <argsstring>(inode_t *parent, int index)</argsstring>
        <name>vfs_mapped_at_index</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="44" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="44" bodyend="56"/>
        <references refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" compoundref="list_8h" startline="175">list_foreach</references>
        <references refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" compoundref="fs_8h" startline="70">inode::parent</references>
        <references refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" compoundref="attribute_8h" startline="83">value</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1a829e1c063db610c46554db0e28cb2bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vfs_mapped_count</definition>
        <argsstring>(inode_t *parent)</argsstring>
        <name>vfs_mapped_count</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="58" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="58" bodyend="69"/>
        <references refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" compoundref="list_8h" startline="175">list_foreach</references>
        <references refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" compoundref="fs_8h" startline="70">inode::parent</references>
        <references refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" compoundref="attribute_8h" startline="83">value</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1ac571ec2fcf268f322214b46a0a8c7e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vfs_chroot</definition>
        <argsstring>(inode_t *root)</argsstring>
        <name>vfs_chroot</name>
        <param>
          <type><ref refid="fs_8h_1a48b686d0c4375b0d1aab2296dc36c7a6" kindref="member">inode_t</ref> *</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="72" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="72" bodyend="77"/>
        <references refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" compoundref="fs_8h" startline="70">inode::parent</references>
      </memberdef>
      <memberdef kind="function" id="vfs_8c_1aca585ca14c08d6c1a07e1b886fc9749a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vfs_init</definition>
        <argsstring>()</argsstring>
        <name>vfs_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/fs/vfs.c" line="81" column="1" bodyfile="/opt/prj/aPlus/src/fs/vfs.c" bodystart="81" bodyend="115"/>
        <references refid="structinode_1a8221183a697c9f2b4e0e295f5a9d8afd" compoundref="fs_8h" startline="64">inode::chown</references>
        <references refid="structinode_1ad622a049b34780786d9ba4311b06b3b4" compoundref="fs_8h" startline="60">inode::creat</references>
        <references refid="structinode_1a127a2eb030df332fa64a81188731ad6b" compoundref="fs_8h" startline="39">inode::dev</references>
        <references refid="structinode_1ab6c5e2d912fdbd506086e53185cd370d" compoundref="fs_8h" startline="59">inode::finddir</references>
        <references refid="structinode_1ae2972ef183f5c39aac7cb83b9f8a04a8" compoundref="fs_8h" startline="65">inode::flush</references>
        <references refid="structinode_1a8434fb9dd05057d00b37ed713713835d" compoundref="fs_8h" startline="44">inode::gid</references>
        <references refid="fs_8h_1a2a5a81b6a48db264d1ec6048268ea154" compoundref="fs_8h" startline="27">GID_ROOT</references>
        <references refid="structinode_1a1a77be0f24a6c9a18bbdbcecfb75df7c" compoundref="fs_8h" startline="40">inode::ino</references>
        <references refid="structinode_1a636843da203574bc338b016758bf8c7e" compoundref="fs_8h" startline="67">inode::ioctl</references>
        <references refid="mm_8h_1a1f5d4240b2decc62c0e6eae06c72916c">kmalloc</references>
        <references refid="structinode_1a3533c53c5391601c66b3ae0f389c0843" compoundref="fs_8h" startline="71">inode::link</references>
        <references refid="list_8h_1a945ef9f05b26f6016d2f28ec8836b1f0" compoundref="list_8h" startline="56" endline="71">list_add</references>
        <references refid="list_8h_1aa288c0785df071ed8643763202928c82" compoundref="list_8h" startline="187">list_init</references>
        <references refid="structinode_1a4902d9f6a1d7bd79c6f1bb73d83ce8e3" compoundref="fs_8h" startline="41">inode::mode</references>
        <references refid="structinode_1ad64802d9d4ebdd1c56af5ab6e302faf0" compoundref="fs_8h" startline="37">inode::name</references>
        <references refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" compoundref="vfs_8c" startline="17">nextinode</references>
        <references refid="structinode_1a1daedc820c86b5af32f0a137419f7a8f" compoundref="fs_8h" startline="42">inode::nlink</references>
        <references refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" compoundref="fs_8h" startline="70">inode::parent</references>
        <references refid="structinode_1a3e7613383954ff7b5faf7c2188e1f61b" compoundref="fs_8h" startline="45">inode::rdev</references>
        <references refid="structinode_1ae2c5e8a0a372334b97024fbd9ef694c1" compoundref="fs_8h" startline="55">inode::read</references>
        <references refid="structinode_1a0a54c11571f19f23322f3e6ad3ecb113" compoundref="fs_8h" startline="58">inode::readdir</references>
        <references refid="structinode_1a5a309a9c4ada7e4d062162b06125a929" compoundref="fs_8h" startline="62">inode::rename</references>
        <references refid="structinode_1a53722b1b60b7136ce0204b66527bb400" compoundref="fs_8h" startline="46">inode::size</references>
        <references refid="structinode_1a0eac94e96ded19029e871d5cce815bcb" compoundref="fs_8h" startline="43">inode::uid</references>
        <references refid="fs_8h_1a9cf90243a3f4070f29ff12e5740e4ae4" compoundref="fs_8h" startline="26">UID_ROOT</references>
        <references refid="structinode_1adf65bac80736631b8000d3d34e953aaa" compoundref="fs_8h" startline="63">inode::unlink</references>
        <references refid="structinode_1a53a123d38834fa17e7ef5c1e5f47bba2" compoundref="fs_8h" startline="56">inode::write</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aplus_8h" kindref="compound">aplus.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fs_8h" kindref="compound">aplus/fs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="list_8h" kindref="compound">aplus/list.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dirent_8h" kindref="compound">dirent.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="vfs_8c_1ab78229df5c858687756417b32ac398ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structlist" kindref="compound">list_t</ref>*<sp/><ref refid="vfs_8c_1ab78229df5c858687756417b32ac398ff" kindref="member">list_inodes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17" refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref><sp/><ref refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" kindref="member">nextinode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="write_8c_1a9af8258c3554800f6613f8147544225f" refkind="member"><highlight class="normal"><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="vfs_8c_1a9af8258c3554800f6613f8147544225f" kindref="member">vfs_root</ref>;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="vfs_8c_1acb87c78588a46c5526e933c495b69c2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vfs_8c_1acb87c78588a46c5526e933c495b69c2a" kindref="member">vfs_map</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="structinode" kindref="compound">inode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>inode-&gt;<ref refid="structinode_1a1a77be0f24a6c9a18bbdbcecfb75df7c" kindref="member">ino</ref><sp/>=<sp/>(ino_t)<sp/><ref refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" kindref="member">nextinode</ref>++;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a945ef9f05b26f6016d2f28ec8836b1f0" kindref="member">list_add</ref>(list_inodes,<sp/>(<ref refid="list_8h_1a83bc1af7566502e08756b8d8c425972e" kindref="member">listval_t</ref>)<sp/>inode);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="vfs_8c_1a13a7520e2fe9380c3ed93472d0c800bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vfs_8c_1a13a7520e2fe9380c3ed93472d0c800bc" kindref="member">vfs_umap</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="structinode" kindref="compound">inode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a4470c240b622941415ae5250067699b5" kindref="member">list_remove</ref>(list_inodes,<sp/>(<ref refid="list_8h_1a83bc1af7566502e08756b8d8c425972e" kindref="member">listval_t</ref>)<sp/>inode);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mm_8h_1acee1960bdb3a19cb495341ec725cafef" kindref="member">kfree</ref>(inode);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="vfs_8c_1a99334446cfc1dfc32088d838b4f2895c" refkind="member"><highlight class="normal"><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="vfs_8c_1a99334446cfc1dfc32088d838b4f2895c" kindref="member">vfs_mapped</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/>parent,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="attribute_8h_1aae08e5b919f01beb6c69d2859e0dfc27" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" kindref="member">list_foreach</ref>(tmp,<sp/>list_inodes)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" kindref="member">value</ref><sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/>tmp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value-&gt;<ref refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" kindref="member">parent</ref><sp/>==<sp/>parent)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(value-&gt;<ref refid="structinode_1ad64802d9d4ebdd1c56af5ab6e302faf0" kindref="member">name</ref>,<sp/>name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="vfs_8c_1a4f7b5f17ac7c4b3a0a574d9620e0512d" refkind="member"><highlight class="normal"><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="vfs_8c_1a4f7b5f17ac7c4b3a0a574d9620e0512d" kindref="member">vfs_mapped_at_index</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/>parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" kindref="member">list_foreach</ref>(tmp,<sp/>list_inodes)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" kindref="member">value</ref><sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/>tmp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value-&gt;<ref refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" kindref="member">parent</ref><sp/>==<sp/>parent)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index--;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="vfs_8c_1a829e1c063db610c46554db0e28cb2bcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vfs_8c_1a829e1c063db610c46554db0e28cb2bcb" kindref="member">vfs_mapped_count</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/>parent)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a1f44c976d2c698407a17fef984a5b232" kindref="member">list_foreach</ref>(tmp,<sp/>list_inodes)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structinode" kindref="compound">inode_t</ref>*<sp/><ref refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" kindref="member">value</ref><sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/>tmp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value-&gt;<ref refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" kindref="member">parent</ref><sp/>==<sp/>parent)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="vfs_8c_1ac571ec2fcf268f322214b46a0a8c7e74" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vfs_8c_1ac571ec2fcf268f322214b46a0a8c7e74" kindref="member">vfs_chroot</ref>(<ref refid="structinode" kindref="compound">inode_t</ref>*<sp/>root)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root<sp/>=<sp/>root;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" kindref="member">parent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="vfs_8c_1aca585ca14c08d6c1a07e1b886fc9749a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vfs_8c_1aca585ca14c08d6c1a07e1b886fc9749a" kindref="member">vfs_init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1aa288c0785df071ed8643763202928c82" kindref="member">list_init</ref>(list_inodes);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root<sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/><ref refid="mm_8h_1a1f5d4240b2decc62c0e6eae06c72916c" kindref="member">kmalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinode" kindref="compound">inode_t</ref>));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ad64802d9d4ebdd1c56af5ab6e302faf0" kindref="member">name</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ad64802d9d4ebdd1c56af5ab6e302faf0" kindref="member">name</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a127a2eb030df332fa64a81188731ad6b" kindref="member">dev</ref><sp/>=<sp/>(dev_t)<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a1a77be0f24a6c9a18bbdbcecfb75df7c" kindref="member">ino</ref><sp/>=<sp/>(ino_t)<sp/><ref refid="vfs_8c_1ad11ac1a0eb756180b648d9ac7d53b169" kindref="member">nextinode</ref>++;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a4902d9f6a1d7bd79c6f1bb73d83ce8e3" kindref="member">mode</ref><sp/>=<sp/>S_IFDIR;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a1daedc820c86b5af32f0a137419f7a8f" kindref="member">nlink</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a0eac94e96ded19029e871d5cce815bcb" kindref="member">uid</ref><sp/>=<sp/><ref refid="fs_8h_1a9cf90243a3f4070f29ff12e5740e4ae4" kindref="member">UID_ROOT</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a8434fb9dd05057d00b37ed713713835d" kindref="member">gid</ref><sp/>=<sp/><ref refid="fs_8h_1a2a5a81b6a48db264d1ec6048268ea154" kindref="member">GID_ROOT</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a3e7613383954ff7b5faf7c2188e1f61b" kindref="member">rdev</ref><sp/>=<sp/>(dev_t)<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a53722b1b60b7136ce0204b66527bb400" kindref="member">size</ref><sp/>=<sp/>(size_t)<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vfs_root-&gt;atime<sp/>=<sp/>vfs_root-&gt;ctime<sp/>=<sp/>vfs_root-&gt;mtime<sp/>=<sp/>time(NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a2d4fac4ae14332628e6fa2bd55dd3121" kindref="member">parent</ref><sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/>NULL;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a3533c53c5391601c66b3ae0f389c0843" kindref="member">link</ref><sp/>=<sp/>(<ref refid="structinode" kindref="compound">inode_t</ref>*)<sp/>NULL;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ae2c5e8a0a372334b97024fbd9ef694c1" kindref="member">read</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a53a123d38834fa17e7ef5c1e5f47bba2" kindref="member">write</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a0a54c11571f19f23322f3e6ad3ecb113" kindref="member">readdir</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ab6c5e2d912fdbd506086e53185cd370d" kindref="member">finddir</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ad622a049b34780786d9ba4311b06b3b4" kindref="member">creat</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a5a309a9c4ada7e4d062162b06125a929" kindref="member">rename</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1adf65bac80736631b8000d3d34e953aaa" kindref="member">unlink</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a8221183a697c9f2b4e0e295f5a9d8afd" kindref="member">chown</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1ae2972ef183f5c39aac7cb83b9f8a04a8" kindref="member">flush</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>vfs_root-&gt;<ref refid="structinode_1a636843da203574bc338b016758bf8c7e" kindref="member">ioctl</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="list_8h_1a945ef9f05b26f6016d2f28ec8836b1f0" kindref="member">list_add</ref>(list_inodes,<sp/>(<ref refid="list_8h_1a83bc1af7566502e08756b8d8c425972e" kindref="member">listval_t</ref>)<sp/>vfs_root);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/opt/prj/aPlus/src/fs/vfs.c"/>
  </compounddef>
</doxygen>
