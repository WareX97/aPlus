<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="chkfail_8c" kind="file">
    <compoundname>chkfail.c</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="2713">
        <label>stdint.h</label>
      </node>
      <node id="2716">
        <label>stdlib.h</label>
      </node>
      <node id="2714">
        <label>stddef.h</label>
      </node>
      <node id="2717">
        <label>string.h</label>
      </node>
      <node id="2712">
        <label>usr/src/libssp/src/chkfail.c</label>
        <link refid="chkfail.c"/>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
        <childnode refid="2715" relation="include">
        </childnode>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2717" relation="include">
        </childnode>
      </node>
      <node id="2715">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="chkfail_8c_1adc3192edb8f484b8bd460a9f5e3ab023" prot="public" static="no">
        <name>STACK_CHK_GUARD</name>
        <initializer>0xe2dee396</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" line="10" column="9" bodyfile="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="chkfail_8c_1a4d89a2b9acdd92bbf45a2af64c570bb3" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* __stack_chk_guard</definition>
        <argsstring></argsstring>
        <name>__stack_chk_guard</name>
        <initializer>= (void*) <ref refid="chkfail_8c_1adc3192edb8f484b8bd460a9f5e3ab023" kindref="member">STACK_CHK_GUARD</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" line="15" column="1" bodyfile="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="chkfail_8c_1a1b6824bfd4ec0404a4f875ed8db0274e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((noreturn))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(noreturn)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" line="18" column="1" bodyfile="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c" bodystart="18" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UINT32_MAX<sp/>==<sp/>UINTPTR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="chkfail_8c_1adc3192edb8f484b8bd460a9f5e3ab023" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_CHK_GUARD<sp/>0xe2dee396</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STACK_CHK_GUARD<sp/>0x595e9fbd94fda766</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="chkfail_8c_1a4d89a2b9acdd92bbf45a2af64c570bb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="chkfail_8c_1a4d89a2b9acdd92bbf45a2af64c570bb3" kindref="member">__stack_chk_guard</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/><ref refid="chkfail_8c_1adc3192edb8f484b8bd460a9f5e3ab023" kindref="member">STACK_CHK_GUARD</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="chkfail_8c_1a1b6824bfd4ec0404a4f875ed8db0274e" refkind="member"><highlight class="normal"><ref refid="chkfail_8c_1a1b6824bfd4ec0404a4f875ed8db0274e" kindref="member">__attribute__</ref>((noreturn))</highlight></codeline>
<codeline lineno="19"><highlight class="normal">void<sp/>__stack_chk_fail(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNU_LIBRARY__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__progname;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__progname[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;panic&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>stack<sp/>smashing<sp/>detected\n&quot;</highlight><highlight class="normal">,<sp/>__progname);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="chkfail_8c_1a1b6824bfd4ec0404a4f875ed8db0274e" kindref="member">__attribute__</ref>((noreturn))</highlight></codeline>
<codeline lineno="33"><highlight class="normal">void<sp/>__chk_fail(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>__GNU_LIBRARY__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>__progname;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__progname[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;panic&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>buffer<sp/>overflow<sp/>detected\n&quot;</highlight><highlight class="normal">,<sp/>__progname);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_HIDDEN_VISIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="chkfail_8c_1a1b6824bfd4ec0404a4f875ed8db0274e" kindref="member">__attribute__</ref>((visibility(</highlight><highlight class="stringliteral">&quot;hidden&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="47"><highlight class="normal">void<sp/>__stack_chk_fail_local(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>__stack_chk_fail();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/opt/prj/aPlus/usr/src/libssp/src/chkfail.c"/>
  </compounddef>
</doxygen>
