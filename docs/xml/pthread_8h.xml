<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="pthread_8h" kind="file">
    <compoundname>pthread.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sched.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="pthread__attr_8c" local="no">usr/src/libpthread/src/pthread_attr.c</includedby>
    <includedby refid="pthread__internal_8h" local="no">usr/src/libpthread/src/pthread_internal.h</includedby>
    <includedby refid="pthread__barrier_8c" local="no">usr/src/libpthread/src/pthread_barrier.c</includedby>
    <includedby refid="pthread__barrierattr_8c" local="no">usr/src/libpthread/src/pthread_barrierattr.c</includedby>
    <includedby refid="pthread__cancel_8c" local="no">usr/src/libpthread/src/pthread_cancel.c</includedby>
    <includedby refid="pthread__cond_8c" local="no">usr/src/libpthread/src/pthread_cond.c</includedby>
    <includedby refid="pthread__condattr_8c" local="no">usr/src/libpthread/src/pthread_condattr.c</includedby>
    <includedby refid="pthread__create_8c" local="no">usr/src/libpthread/src/pthread_create.c</includedby>
    <includedby refid="pthread__detach_8c" local="no">usr/src/libpthread/src/pthread_detach.c</includedby>
    <includedby refid="pthread__equal_8c" local="no">usr/src/libpthread/src/pthread_equal.c</includedby>
    <includedby refid="pthread__exit_8c" local="no">usr/src/libpthread/src/pthread_exit.c</includedby>
    <includedby refid="pthread__join_8c" local="no">usr/src/libpthread/src/pthread_join.c</includedby>
    <includedby refid="pthread__key_8c" local="no">usr/src/libpthread/src/pthread_key.c</includedby>
    <includedby refid="pthread__mutex_8c" local="no">usr/src/libpthread/src/pthread_mutex.c</includedby>
    <includedby refid="pthread__mutexattr_8c" local="no">usr/src/libpthread/src/pthread_mutexattr.c</includedby>
    <includedby refid="pthread__once_8c" local="no">usr/src/libpthread/src/pthread_once.c</includedby>
    <includedby refid="pthread__rwlock_8c" local="no">usr/src/libpthread/src/pthread_rwlock.c</includedby>
    <includedby refid="pthread__rwlockattr_8c" local="no">usr/src/libpthread/src/pthread_rwlockattr.c</includedby>
    <includedby refid="pthread__sched_8c" local="no">usr/src/libpthread/src/pthread_sched.c</includedby>
    <includedby refid="pthread__self_8c" local="no">usr/src/libpthread/src/pthread_self.c</includedby>
    <includedby refid="pthread__spin_8c" local="no">usr/src/libpthread/src/pthread_spin.c</includedby>
    <includedby refid="usr_2src_2libpthread_2test_2main_8c" local="no">usr/src/libpthread/test/main.c</includedby>
    <incdepgraph>
      <node id="2143">
        <label>stdint.h</label>
      </node>
      <node id="2142">
        <label>usr/src/libpthread/include/pthread.h</label>
        <link refid="pthread.h"/>
        <childnode refid="2143" relation="include">
        </childnode>
        <childnode refid="2144" relation="include">
        </childnode>
        <childnode refid="2145" relation="include">
        </childnode>
        <childnode refid="2146" relation="include">
        </childnode>
        <childnode refid="2147" relation="include">
        </childnode>
      </node>
      <node id="2144">
        <label>sys/types.h</label>
      </node>
      <node id="2147">
        <label>unistd.h</label>
      </node>
      <node id="2145">
        <label>sys/time.h</label>
      </node>
      <node id="2146">
        <label>sched.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2156">
        <label>usr/src/libpthread/src/pthread_create.c</label>
        <link refid="pthread__create_8c"/>
      </node>
      <node id="2160">
        <label>usr/src/libpthread/src/pthread_join.c</label>
        <link refid="pthread__join_8c"/>
      </node>
      <node id="2170">
        <label>usr/src/libpthread/src/pthread_spin.c</label>
        <link refid="pthread__spin_8c"/>
      </node>
      <node id="2158">
        <label>usr/src/libpthread/src/pthread_equal.c</label>
        <link refid="pthread__equal_8c"/>
      </node>
      <node id="2169">
        <label>usr/src/libpthread/src/pthread_self.c</label>
        <link refid="pthread__self_8c"/>
      </node>
      <node id="2150">
        <label>usr/src/libpthread/src/pthread_internal.h</label>
        <link refid="pthread__internal_8h"/>
        <childnode refid="2149" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
        <childnode refid="2153" relation="include">
        </childnode>
        <childnode refid="2154" relation="include">
        </childnode>
        <childnode refid="2155" relation="include">
        </childnode>
        <childnode refid="2156" relation="include">
        </childnode>
        <childnode refid="2157" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2159" relation="include">
        </childnode>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2162" relation="include">
        </childnode>
        <childnode refid="2163" relation="include">
        </childnode>
        <childnode refid="2164" relation="include">
        </childnode>
        <childnode refid="2165" relation="include">
        </childnode>
        <childnode refid="2166" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
      </node>
      <node id="2163">
        <label>usr/src/libpthread/src/pthread_mutexattr.c</label>
        <link refid="pthread__mutexattr_8c"/>
      </node>
      <node id="2171">
        <label>usr/src/libpthread/test/main.c</label>
        <link refid="usr_2src_2libpthread_2test_2main_8c"/>
      </node>
      <node id="2162">
        <label>usr/src/libpthread/src/pthread_mutex.c</label>
        <link refid="pthread__mutex_8c"/>
      </node>
      <node id="2148">
        <label>usr/src/libpthread/include/pthread.h</label>
        <link refid="pthread.h"/>
        <childnode refid="2149" relation="include">
        </childnode>
        <childnode refid="2150" relation="include">
        </childnode>
        <childnode refid="2151" relation="include">
        </childnode>
        <childnode refid="2152" relation="include">
        </childnode>
        <childnode refid="2153" relation="include">
        </childnode>
        <childnode refid="2154" relation="include">
        </childnode>
        <childnode refid="2155" relation="include">
        </childnode>
        <childnode refid="2156" relation="include">
        </childnode>
        <childnode refid="2157" relation="include">
        </childnode>
        <childnode refid="2158" relation="include">
        </childnode>
        <childnode refid="2159" relation="include">
        </childnode>
        <childnode refid="2160" relation="include">
        </childnode>
        <childnode refid="2161" relation="include">
        </childnode>
        <childnode refid="2162" relation="include">
        </childnode>
        <childnode refid="2163" relation="include">
        </childnode>
        <childnode refid="2164" relation="include">
        </childnode>
        <childnode refid="2166" relation="include">
        </childnode>
        <childnode refid="2167" relation="include">
        </childnode>
        <childnode refid="2168" relation="include">
        </childnode>
        <childnode refid="2169" relation="include">
        </childnode>
        <childnode refid="2170" relation="include">
        </childnode>
        <childnode refid="2171" relation="include">
        </childnode>
      </node>
      <node id="2165">
        <label>usr/src/libpthread/src/pthread_queue.c</label>
        <link refid="pthread__queue_8c"/>
      </node>
      <node id="2168">
        <label>usr/src/libpthread/src/pthread_sched.c</label>
        <link refid="pthread__sched_8c"/>
      </node>
      <node id="2153">
        <label>usr/src/libpthread/src/pthread_cancel.c</label>
        <link refid="pthread__cancel_8c"/>
      </node>
      <node id="2149">
        <label>usr/src/libpthread/src/pthread_attr.c</label>
        <link refid="pthread__attr_8c"/>
      </node>
      <node id="2152">
        <label>usr/src/libpthread/src/pthread_barrierattr.c</label>
        <link refid="pthread__barrierattr_8c"/>
      </node>
      <node id="2167">
        <label>usr/src/libpthread/src/pthread_rwlockattr.c</label>
        <link refid="pthread__rwlockattr_8c"/>
      </node>
      <node id="2159">
        <label>usr/src/libpthread/src/pthread_exit.c</label>
        <link refid="pthread__exit_8c"/>
      </node>
      <node id="2155">
        <label>usr/src/libpthread/src/pthread_condattr.c</label>
        <link refid="pthread__condattr_8c"/>
      </node>
      <node id="2164">
        <label>usr/src/libpthread/src/pthread_once.c</label>
        <link refid="pthread__once_8c"/>
      </node>
      <node id="2154">
        <label>usr/src/libpthread/src/pthread_cond.c</label>
        <link refid="pthread__cond_8c"/>
      </node>
      <node id="2161">
        <label>usr/src/libpthread/src/pthread_key.c</label>
        <link refid="pthread__key_8c"/>
      </node>
      <node id="2151">
        <label>usr/src/libpthread/src/pthread_barrier.c</label>
        <link refid="pthread__barrier_8c"/>
      </node>
      <node id="2157">
        <label>usr/src/libpthread/src/pthread_detach.c</label>
        <link refid="pthread__detach_8c"/>
      </node>
      <node id="2166">
        <label>usr/src/libpthread/src/pthread_rwlock.c</label>
        <link refid="pthread__rwlock_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpthread__attr" prot="public">pthread_attr</innerclass>
    <innerclass refid="structpthread__once" prot="public">pthread_once</innerclass>
    <innerclass refid="structpthread__mutexattr" prot="public">pthread_mutexattr</innerclass>
    <innerclass refid="structpthread__mutex" prot="public">pthread_mutex</innerclass>
    <innerclass refid="structpthread__condattr" prot="public">pthread_condattr</innerclass>
    <innerclass refid="structpthread__cond" prot="public">pthread_cond</innerclass>
    <innerclass refid="structpthread__barrierattr" prot="public">pthread_barrierattr</innerclass>
    <innerclass refid="structpthread__barrier" prot="public">pthread_barrier</innerclass>
    <innerclass refid="structpthread__rwlockattr" prot="public">pthread_rwlockattr</innerclass>
    <innerclass refid="structpthread__rwlock" prot="public">pthread_rwlock</innerclass>
    <innerclass refid="structpthread__spinlock" prot="public">pthread_spinlock</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pthread_8h_1a5e89527a7c4b94907d559a975d5850ce" prot="public" static="no">
        <name>_POSIX_THREADS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="32" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1afb10d234d831c7b57768d62786748bc7" prot="public" static="no">
        <name>PTHREAD_CREATE_JOINABLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="40" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a391c5eb0f6b5febc48710d0be3f62394" prot="public" static="no">
        <name>PTHREAD_CREATE_DETACHED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="41" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a470fccc57c4d7c3846e446a17cd23573" prot="public" static="no">
        <name>PTHREAD_INHERIT_SCHED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="43" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1ad45abe03c8232518b6995e73172fe053" prot="public" static="no">
        <name>PTHREAD_EXPLICIT_SCHED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="44" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aeab18be4f4ee13db4b0b65c6768fb539" prot="public" static="no">
        <name>PTHREAD_SCOPE_PROCESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="46" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1ab754f4339f76c46b8f57413c03e8ec65" prot="public" static="no">
        <name>PTHREAD_SCOPE_SYSTEM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="47" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef" prot="public" static="no">
        <name>PTHREAD_CANCEL_ENABLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="49" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a6c661332f782dcebc87b878990424b4c" prot="public" static="no">
        <name>PTHREAD_CANCEL_DISABLE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="50" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a443f2f512de9324bf77625041ecb04f4" prot="public" static="no">
        <name>PTHREAD_PROCESS_PRIVATE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="52" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a07f3670a510cdb93233e84e1a0b50e89" prot="public" static="no">
        <name>PTHREAD_PROCESS_SHARED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="53" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a59e22497b65fc305ddb5cea8b4990b51" prot="public" static="no">
        <name>PTHREAD_ONCE_INIT</name>
        <initializer>{ 0, -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="72" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aae4b650085c2599674938f503d6253cf" prot="public" static="no">
        <name>PTHREAD_MUTEX_NORMAL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="76" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645" prot="public" static="no">
        <name>PTHREAD_MUTEX_RECURSIVE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="77" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aaf502496651f95b06be861af7902cb23" prot="public" static="no">
        <name>PTHREAD_MUTEX_ERRORCHECK</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="78" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" prot="public" static="no">
        <name>PTHREAD_MUTEX_DEFAULT</name>
        <initializer><ref refid="pthread_8h_1aae4b650085c2599674938f503d6253cf" kindref="member">PTHREAD_MUTEX_NORMAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="79" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a84e55100366a6a8338a2af3b3f279686" prot="public" static="no">
        <name>PTHREAD_MUTEX_INITIALIZER</name>
        <initializer>{ 0, 0, -1, -1, -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="97" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1acff148607c8534833336adb03d3f7b5b" prot="public" static="no">
        <name>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP</name>
        <initializer>{ 0, 0, -1, -1, -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="98" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aa7b867fe46f3660283fcb356c4fcbbf0" prot="public" static="no">
        <name>PTHREAD_COND_INITIALIZER</name>
        <initializer>((<ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref>) -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="110" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a822c63bc662ad86cfb2dcec50edbb42b" prot="public" static="no">
        <name>PTHREAD_BARRIER_SERIAL_THREAD</name>
        <initializer>~0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="114" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aa92fd7b492a8a5b31b2f8b3b6039c622" prot="public" static="no">
        <name>PTHREAD_RWLOCK_INITIALIZER</name>
        <initializer>{ <ref refid="pthread_8h_1a84e55100366a6a8338a2af3b3f279686" kindref="member">PTHREAD_MUTEX_INITIALIZER</ref>, 0, 0, 0, 0, 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="142" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1aabe0fad730afb8dd41f42bdda6f6ae81" prot="public" static="no">
        <name>SPINLOCK_UNLOCKED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="145" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a1521727499f19b6459d150df04a2e445" prot="public" static="no">
        <name>SPINLOCK_LOCKED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="146" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1a5e10ca049cf7b35f19b7cf24805f604a" prot="public" static="no">
        <name>SPINLOCK_USEMUTEX</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="147" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pthread_8h_1ad4620a03c26b4119bf642a7f53df4fb2" prot="public" static="no">
        <name>PTHREAD_SPINLOCK_INITIALIZER</name>
        <initializer>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="154" column="9" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pthread_8h_1afab214cf0e27a8f9c17c5412d0a7c88d" prot="public" static="no">
        <type><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t tls_t</definition>
        <argsstring></argsstring>
        <name>tls_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="35" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" prot="public" static="no">
        <type><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t handle_t</definition>
        <argsstring></argsstring>
        <name>handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="36" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" prot="public" static="no">
        <type><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref></type>
        <definition>typedef handle_t pthread_t</definition>
        <argsstring></argsstring>
        <name>pthread_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="37" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" prot="public" static="no">
        <type><ref refid="pthread_8h_1afab214cf0e27a8f9c17c5412d0a7c88d" kindref="member">tls_t</ref></type>
        <definition>typedef tls_t pthread_key_t</definition>
        <argsstring></argsstring>
        <name>pthread_key_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="38" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" prot="public" static="no">
        <type>struct <ref refid="structpthread__attr" kindref="compound">pthread_attr</ref></type>
        <definition>typedef struct pthread_attr  pthread_attr_t</definition>
        <argsstring></argsstring>
        <name>pthread_attr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a18773caa8d79a98514e4291b855c3d80" prot="public" static="no">
        <type>struct <ref refid="structpthread__once" kindref="compound">pthread_once</ref></type>
        <definition>typedef struct pthread_once  pthread_once_t</definition>
        <argsstring></argsstring>
        <name>pthread_once_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" prot="public" static="no">
        <type>struct <ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr</ref></type>
        <definition>typedef struct pthread_mutexattr  pthread_mutexattr_t</definition>
        <argsstring></argsstring>
        <name>pthread_mutexattr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" prot="public" static="no">
        <type>struct <ref refid="structpthread__mutex" kindref="compound">pthread_mutex</ref></type>
        <definition>typedef struct pthread_mutex  pthread_mutex_t</definition>
        <argsstring></argsstring>
        <name>pthread_mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" prot="public" static="no">
        <type>struct <ref refid="structpthread__condattr" kindref="compound">pthread_condattr</ref></type>
        <definition>typedef struct pthread_condattr  pthread_condattr_t</definition>
        <argsstring></argsstring>
        <name>pthread_condattr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" prot="public" static="no">
        <type>struct <ref refid="structpthread__cond" kindref="compound">pthread_cond</ref></type>
        <definition>typedef struct pthread_cond  pthread_cond_t</definition>
        <argsstring></argsstring>
        <name>pthread_cond_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" prot="public" static="no">
        <type>struct <ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr</ref></type>
        <definition>typedef struct pthread_barrierattr  pthread_barrierattr_t</definition>
        <argsstring></argsstring>
        <name>pthread_barrierattr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a0af030d8520cb3271d895b21a5ecca34" prot="public" static="no">
        <type>struct <ref refid="structpthread__barrier" kindref="compound">pthread_barrier</ref></type>
        <definition>typedef struct pthread_barrier  pthread_barrier_t</definition>
        <argsstring></argsstring>
        <name>pthread_barrier_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" prot="public" static="no">
        <type>struct <ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr</ref></type>
        <definition>typedef struct pthread_rwlockattr  pthread_rwlockattr_t</definition>
        <argsstring></argsstring>
        <name>pthread_rwlockattr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" prot="public" static="no">
        <type>struct <ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock</ref></type>
        <definition>typedef struct pthread_rwlock  pthread_rwlock_t</definition>
        <argsstring></argsstring>
        <name>pthread_rwlock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" prot="public" static="no">
        <type>struct <ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock</ref></type>
        <definition>typedef struct pthread_spinlock  pthread_spinlock_t</definition>
        <argsstring></argsstring>
        <name>pthread_spinlock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="152" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pthread_8h_1a0b85ebb1e3aac081a4c0a5e85ae3cbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_init</definition>
        <argsstring>(pthread_attr_t *attr)</argsstring>
        <name>pthread_attr_init</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="165" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="12" bodyend="26"/>
        <references refid="structpthread__attr_1a1d5ca4923f6814d754208080896a360a" compoundref="pthread_8h" startline="63">pthread_attr::contentionscope</references>
        <references refid="structpthread__attr_1a2ac0f3f9d4513024bbafc7db17c25a46" compoundref="pthread_8h" startline="60">pthread_attr::detachstate</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" compoundref="pthread_8h" startline="62">pthread_attr::inheritsched</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
        <references refid="pthread__internal_8h_1a8b3dc1c5c1a165d6143b1dce950e8266" compoundref="pthread__internal_8h" startline="26">PTHREAD_STACK_MIN</references>
        <references refid="structpthread__attr_1a004b9c2b7c75177f4de0262277f48333" compoundref="pthread_8h" startline="58">pthread_attr::stackaddr</references>
        <references refid="structpthread__attr_1a8b8eaabf2bc9b4cec33d7764bbb115d9" compoundref="pthread_8h" startline="59">pthread_attr::stacksize</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a4bcdbf47c17c7dcc51e9f05f5cb56d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_destroy</definition>
        <argsstring>(pthread_attr_t *attr)</argsstring>
        <name>pthread_attr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="166" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="28" bodyend="36"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a391c34da42e68ddd24f5ee0c070d5c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getdetachstate</definition>
        <argsstring>(const pthread_attr_t *attr, int *detachstate)</argsstring>
        <name>pthread_attr_getdetachstate</name>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>detachstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="167" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="38" bodyend="46"/>
        <references refid="structpthread__attr_1a2ac0f3f9d4513024bbafc7db17c25a46" compoundref="pthread_8h" startline="60">pthread_attr::detachstate</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ae6ee78c307d8467b34a9b0c330993a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setdetachstate</definition>
        <argsstring>(pthread_attr_t *attr, int detachstate)</argsstring>
        <name>pthread_attr_setdetachstate</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>detachstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="168" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="48" bodyend="56"/>
        <references refid="structpthread__attr_1a2ac0f3f9d4513024bbafc7db17c25a46" compoundref="pthread_8h" startline="60">pthread_attr::detachstate</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1add78bd0e6395c9fbd8ed170a67da0b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getstackaddr</definition>
        <argsstring>(const pthread_attr_t *attr, void **stackaddr)</argsstring>
        <name>pthread_attr_getstackaddr</name>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>stackaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="169" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="58" bodyend="66"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a004b9c2b7c75177f4de0262277f48333" compoundref="pthread_8h" startline="58">pthread_attr::stackaddr</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a298a51c79184546ef78800ea6d4463b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setstackaddr</definition>
        <argsstring>(pthread_attr_t *attr, void *stackaddr)</argsstring>
        <name>pthread_attr_setstackaddr</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>stackaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="170" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="68" bodyend="76"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a004b9c2b7c75177f4de0262277f48333" compoundref="pthread_8h" startline="58">pthread_attr::stackaddr</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ae23600d4670359ab12bfba20db2c9a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getstacksize</definition>
        <argsstring>(const pthread_attr_t *attr, size_t *stacksize)</argsstring>
        <name>pthread_attr_getstacksize</name>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>stacksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="171" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="79" bodyend="87"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a8b8eaabf2bc9b4cec33d7764bbb115d9" compoundref="pthread_8h" startline="59">pthread_attr::stacksize</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a812a9a455ae2ef2bb0dca4fff201a281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setstacksize</definition>
        <argsstring>(pthread_attr_t *attr, size_t stacksize)</argsstring>
        <name>pthread_attr_setstacksize</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>stacksize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="172" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="89" bodyend="97"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a8b8eaabf2bc9b4cec33d7764bbb115d9" compoundref="pthread_8h" startline="59">pthread_attr::stacksize</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1afd3d272d702481044f8a8cd253fd9b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getschedparam</definition>
        <argsstring>(const pthread_attr_t *attr, struct sched_param *param)</argsstring>
        <name>pthread_attr_getschedparam</name>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="173" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="100" bodyend="108"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a579e6529f0ce482312a5e77ac61cb4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setschedparam</definition>
        <argsstring>(pthread_attr_t *attr, const struct sched_param *param)</argsstring>
        <name>pthread_attr_setschedparam</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="174" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="112" bodyend="120"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a176ad27074237a3eea7bf8fccb911479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getschedpolicy</definition>
        <argsstring>(pthread_attr_t *attr, int *policy)</argsstring>
        <name>pthread_attr_getschedpolicy</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="175" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="123" bodyend="126"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a79b4c9e71486a87ef3014f1c660b33eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setschedpolicy</definition>
        <argsstring>(pthread_attr_t *attr, int policy)</argsstring>
        <name>pthread_attr_setschedpolicy</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="176" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="128" bodyend="131"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ae83dac484200d8cdb85e59cb8a59ca92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getinheritsched</definition>
        <argsstring>(pthread_attr_t *attr, int *inheritsched)</argsstring>
        <name>pthread_attr_getinheritsched</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>inheritsched</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="177" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="133" bodyend="141"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" compoundref="pthread_8h" startline="62">pthread_attr::inheritsched</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ad437fe8caa3ef9f0cb7d69f6f6479df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setinheritsched</definition>
        <argsstring>(pthread_attr_t *attr, int inheritsched)</argsstring>
        <name>pthread_attr_setinheritsched</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inheritsched</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="178" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="143" bodyend="151"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" compoundref="pthread_8h" startline="62">pthread_attr::inheritsched</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ad3fe01698c4fad85bb5cc3f9a2e82ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getscope</definition>
        <argsstring>(const pthread_attr_t *attr, int *contentionscope)</argsstring>
        <name>pthread_attr_getscope</name>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>contentionscope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="179" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="153" bodyend="161"/>
        <references refid="structpthread__attr_1a1d5ca4923f6814d754208080896a360a" compoundref="pthread_8h" startline="63">pthread_attr::contentionscope</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a6d8d320a882ba044a064975dddcf9ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setscope</definition>
        <argsstring>(pthread_attr_t *attr, int contentionscope)</argsstring>
        <name>pthread_attr_setscope</name>
        <param>
          <type><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contentionscope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="180" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_attr.c" bodystart="163" bodyend="171"/>
        <references refid="structpthread__attr_1a1d5ca4923f6814d754208080896a360a" compoundref="pthread_8h" startline="63">pthread_attr::contentionscope</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a6933a96c86c4fbebef09c9cbc0625e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_create</definition>
        <argsstring>(pthread_t *thread, const pthread_attr_t *attr, void *(*start)(void *), void *arg)</argsstring>
        <name>pthread_create</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref> *</type>
          <declname>thread</declname>
        </param>
        <param>
          <type>const <ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *(*)(void *)</type>
          <declname>start</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="186" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_create.c" bodystart="37" bodyend="83"/>
        <references refid="posix_2hooks_8h_1a90a2b2b0249a9fde4ff642490f566e34" compoundref="posix_2hooks_8h" startline="32">__os_thread_create</references>
        <references refid="pthread__create_8c_1ac693b080a510247dfaf444249c2e78b2" compoundref="pthread__create_8c" startline="10">__pthread_counts</references>
        <references refid="pthread__create_8c_1a0177c641d305d417a7960701e701fc07" compoundref="pthread__create_8c" startline="24" endline="34">__pthread_handler__</references>
        <references refid="pthread__create_8c_1acbbda48de9905dc1d40c073a89b66e62" compoundref="pthread__queue_8c" startline="12" endline="26">__pthread_init_queue</references>
        <references refid="pthread__create_8c_1a9ed893dd8f37e017f207c1c6ccdb41ec" compoundref="pthread__create_8c" startline="11">__pthread_queue</references>
        <references refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" compoundref="pthread__internal_8h" startline="44">pthread_context::attr</references>
        <references refid="structpthread__once_1acffdc3852414e4eeece3c8e7cf80ffc1" compoundref="pthread_8h" startline="68">pthread_once::done</references>
        <references refid="structpthread__context_1a688eabe4cd81d34bed6c73abd442f54a" compoundref="pthread__internal_8h" startline="39">pthread_context::entry</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" compoundref="pthread_8h" startline="62">pthread_attr::inheritsched</references>
        <references refid="structpthread__context_1a876fe0d5cfa5b9886c90e5936b98f992" compoundref="pthread__internal_8h" startline="47">pthread_context::next</references>
        <references refid="structpthread__context_1a33f7f059b1d0cda2a8675d13600b6dd2" compoundref="pthread__internal_8h" startline="43">pthread_context::once</references>
        <references refid="structpthread__context_1afb0244aa84b0403cc0df2cd6ebdb94b4" compoundref="pthread__internal_8h" startline="40">pthread_context::param</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
        <references refid="pthread_8h_1a579e6529f0ce482312a5e77ac61cb4d5" compoundref="pthread__attr_8c" startline="112" endline="120">pthread_attr_setschedparam</references>
        <references refid="pthread_8h_1a470fccc57c4d7c3846e446a17cd23573" compoundref="pthread_8h" startline="43">PTHREAD_INHERIT_SCHED</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="pthread__internal_8h_1ab8f25dec585d6255fcf40b67db66c1c5" compoundref="pthread__internal_8h" startline="27">PTHREAD_THREADS_MAX</references>
        <references refid="structpthread__once_1a2bebfebb49a5c75d10119824d5bba93c" compoundref="pthread_8h" startline="69">pthread_once::started</references>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a7c275c509c26566b6dd95a2de1668a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_detach</definition>
        <argsstring>(pthread_t thread)</argsstring>
        <name>pthread_detach</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="187" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_detach.c" bodystart="12" bodyend="49"/>
        <references refid="posix_2hooks_8h_1ab48a49c5d6297d7b9023b8796a1c996e" compoundref="posix_2hooks_8h" startline="33">__os_thread_kill</references>
        <references refid="pthread__detach_8c_1a9ed893dd8f37e017f207c1c6ccdb41ec" compoundref="pthread__detach_8c" startline="10">__pthread_queue</references>
        <references refid="structpthread__once_1acffdc3852414e4eeece3c8e7cf80ffc1" compoundref="pthread_8h" startline="68">pthread_once::done</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__context_1a33f7f059b1d0cda2a8675d13600b6dd2" compoundref="pthread__internal_8h" startline="43">pthread_context::once</references>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a98ec817164a6641eda2341de473b659d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_equal</definition>
        <argsstring>(pthread_t t1, pthread_t t2)</argsstring>
        <name>pthread_equal</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="188" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_equal.c" bodystart="7" bodyend="12"/>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a090bdc13141e76205fab4cb3c5fab0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pthread_exit</definition>
        <argsstring>(void *value_ptr)</argsstring>
        <name>pthread_exit</name>
        <param>
          <type>void *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="189" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_exit.c" bodystart="8" bodyend="19"/>
        <references refid="structpthread__context_1ab2848ec5b075681f217e57545f986c1b" compoundref="pthread__internal_8h" startline="41">pthread_context::exitval</references>
        <references refid="pthread_8h_1a7c275c509c26566b6dd95a2de1668a2f" compoundref="pthread__detach_8c" startline="12" endline="49">pthread_detach</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aa79c99cc7b194918a2def257246f11c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_join</definition>
        <argsstring>(pthread_t thread, void **value_ptr)</argsstring>
        <name>pthread_join</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>thread</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="190" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_join.c" bodystart="8" bodyend="22"/>
        <references refid="structpthread__once_1acffdc3852414e4eeece3c8e7cf80ffc1" compoundref="pthread_8h" startline="68">pthread_once::done</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__context_1ab2848ec5b075681f217e57545f986c1b" compoundref="pthread__internal_8h" startline="41">pthread_context::exitval</references>
        <references refid="structpthread__context_1a33f7f059b1d0cda2a8675d13600b6dd2" compoundref="pthread__internal_8h" startline="43">pthread_context::once</references>
        <references refid="nanosleep_8c_1a357cd4b34c13011749dfffb42b489f09">sched_yield</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
        <definition>pthread_t pthread_self</definition>
        <argsstring>(void)</argsstring>
        <name>pthread_self</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="191" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_self.c" bodystart="10" bodyend="27"/>
        <references refid="posix_2hooks_8h_1a20babf330fa9904ff336e8b41720991d" compoundref="posix_2hooks_8h" startline="34">__os_gettid</references>
        <references refid="pthread__self_8c_1a9ed893dd8f37e017f207c1c6ccdb41ec" compoundref="pthread__self_8c" startline="8">__pthread_queue</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__context_1a876fe0d5cfa5b9886c90e5936b98f992" compoundref="pthread__internal_8h" startline="47">pthread_context::next</references>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a9e77a80c073787bf9a593e9c619dce27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cancel</definition>
        <argsstring>(pthread_t thread)</argsstring>
        <name>pthread_cancel</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="192" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cancel.c" bodystart="7" bodyend="9"/>
        <references refid="pthread_8h_1a7c275c509c26566b6dd95a2de1668a2f" compoundref="pthread__detach_8c" startline="12" endline="49">pthread_detach</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a37075410fbbaad7ee93c95375fc86e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setcancelstate</definition>
        <argsstring>(int state, int *oldstate)</argsstring>
        <name>pthread_setcancelstate</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>oldstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="193" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cancel.c" bodystart="12" bodyend="15"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aab579bcfcf0662a0c1e35fd82162e61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setcanceltype</definition>
        <argsstring>(int type, int *oldtype)</argsstring>
        <name>pthread_setcanceltype</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>oldtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="194" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cancel.c" bodystart="18" bodyend="21"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1af1c95282ab2bea25f0888a19652cd41f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pthread_testcancel</definition>
        <argsstring>(void)</argsstring>
        <name>pthread_testcancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="195" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cancel.c" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a196103ac97710dad7a93fd6c188cc999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_once</definition>
        <argsstring>(pthread_once_t *once_control, void(*init_routine)(void))</argsstring>
        <name>pthread_once</name>
        <param>
          <type><ref refid="pthread_8h_1a18773caa8d79a98514e4291b855c3d80" kindref="member">pthread_once_t</ref> *</type>
          <declname>once_control</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>init_routine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="196" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_once.c" bodystart="7" bodyend="10"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a14f50e1f5d815c90f1f4225eca5d3a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setschedparam</definition>
        <argsstring>(pthread_t thread, int policy, const struct sched_param *param)</argsstring>
        <name>pthread_setschedparam</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>thread</declname>
        </param>
        <param>
          <type>int</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>const struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="202" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_sched.c" bodystart="11" bodyend="24"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__sched_8c_1a00095e5c0543cbca7a166edfcdda659e" compoundref="usr_2src_2libposix_2src_2sched_8c" startline="35" endline="48">sched_setparam</references>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aae9850b3759769c748727e171c4c6e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_getschedparam</definition>
        <argsstring>(pthread_t thread, int *policy, struct sched_param *param)</argsstring>
        <name>pthread_getschedparam</name>
        <param>
          <type><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref></type>
          <declname>thread</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="203" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_sched.c" bodystart="26" bodyend="42"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__sched_8c_1a73d1ad74aaa9fc00f83db6805949ab4e">sched_getparam</references>
        <references refid="structpthread__context_1a5b7aa396dbf3c140b1a54f09568c8253" compoundref="pthread__internal_8h" startline="38">pthread_context::tid</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aee776aa5481b87ca7e7f959a01b50bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setconcurrency</definition>
        <argsstring>(int level)</argsstring>
        <name>pthread_setconcurrency</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="204" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_sched.c" bodystart="44" bodyend="55"/>
        <references refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" compoundref="pthread__internal_8h" startline="44">pthread_context::attr</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1afb4344ea91774ba279ea5df3cb656ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_getconcurrency</definition>
        <argsstring>(void)</argsstring>
        <name>pthread_getconcurrency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="205" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_sched.c" bodystart="57" bodyend="66"/>
        <references refid="structpthread__context_1a63e797747884670222fc0ea6fdf801fd" compoundref="pthread__internal_8h" startline="44">pthread_context::attr</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" compoundref="pthread_8h" startline="61">pthread_attr::param</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1af4b7ced8ecff505380fe8216244a3764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_key_create</definition>
        <argsstring>(pthread_key_t *key, void(*destructor)(void *))</argsstring>
        <name>pthread_key_create</name>
        <param>
          <type><ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>destructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="211" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_key.c" bodystart="9" bodyend="29"/>
        <references refid="pthread__key_8c_1afac43b0444afef8a4a8a6409728a2703" compoundref="pthread__key_8c" startline="7">__pthread_keys</references>
        <references refid="struct____pthread__key_1a8a2c00bb7dbce7d43b3078c6214bc390" compoundref="pthread__internal_8h" startline="33">__pthread_key::dtor</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__internal_8h_1a0a23e66e087bcf5c253b9b2746f19a64" compoundref="pthread__internal_8h" startline="25">PTHREAD_KEYS_MAX</references>
        <references refid="struct____pthread__key_1a81c10bf0d5d76671f389c4aec1af2e1b" compoundref="pthread__internal_8h" startline="32">__pthread_key::used</references>
        <references refid="struct____pthread__key_1a35d38627e4a0de2e247671f0b5b6322a" compoundref="pthread__internal_8h" startline="34">__pthread_key::value</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aee96306dc79294927ee840bb4de2244b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_key_delete</definition>
        <argsstring>(pthread_key_t key)</argsstring>
        <name>pthread_key_delete</name>
        <param>
          <type><ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="212" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_key.c" bodystart="32" bodyend="46"/>
        <references refid="pthread__key_8c_1afac43b0444afef8a4a8a6409728a2703" compoundref="pthread__key_8c" startline="7">__pthread_keys</references>
        <references refid="struct____pthread__key_1a8a2c00bb7dbce7d43b3078c6214bc390" compoundref="pthread__internal_8h" startline="33">__pthread_key::dtor</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__internal_8h_1a0a23e66e087bcf5c253b9b2746f19a64" compoundref="pthread__internal_8h" startline="25">PTHREAD_KEYS_MAX</references>
        <references refid="struct____pthread__key_1a81c10bf0d5d76671f389c4aec1af2e1b" compoundref="pthread__internal_8h" startline="32">__pthread_key::used</references>
        <references refid="struct____pthread__key_1a35d38627e4a0de2e247671f0b5b6322a" compoundref="pthread__internal_8h" startline="34">__pthread_key::value</references>
        <references refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" compoundref="attribute_8h" startline="83">value</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a2187333dd46ce08d9d2e044f79fad705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setspecific</definition>
        <argsstring>(pthread_key_t key, const void *value)</argsstring>
        <name>pthread_setspecific</name>
        <param>
          <type><ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="213" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_key.c" bodystart="49" bodyend="62"/>
        <references refid="pthread__key_8c_1afac43b0444afef8a4a8a6409728a2703" compoundref="pthread__key_8c" startline="7">__pthread_keys</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__internal_8h_1a0a23e66e087bcf5c253b9b2746f19a64" compoundref="pthread__internal_8h" startline="25">PTHREAD_KEYS_MAX</references>
        <references refid="struct____pthread__key_1a35d38627e4a0de2e247671f0b5b6322a" compoundref="pthread__internal_8h" startline="34">__pthread_key::value</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a31469375891078185bda93f0e4411a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* pthread_getspecific</definition>
        <argsstring>(pthread_key_t key)</argsstring>
        <name>pthread_getspecific</name>
        <param>
          <type><ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="214" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_key.c" bodystart="65" bodyend="77"/>
        <references refid="pthread__key_8c_1afac43b0444afef8a4a8a6409728a2703" compoundref="pthread__key_8c" startline="7">__pthread_keys</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__internal_8h_1a0a23e66e087bcf5c253b9b2746f19a64" compoundref="pthread__internal_8h" startline="25">PTHREAD_KEYS_MAX</references>
        <references refid="struct____pthread__key_1a35d38627e4a0de2e247671f0b5b6322a" compoundref="pthread__internal_8h" startline="34">__pthread_key::value</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1af98f6b6c483077a39d1400b1de1577b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_init</definition>
        <argsstring>(pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutexattr_init</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="220" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="8" bodyend="18"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
        <references refid="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" compoundref="pthread_8h" startline="79">PTHREAD_MUTEX_DEFAULT</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a2321aabf58224b06021185708d0f9658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_destroy</definition>
        <argsstring>(pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutexattr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="221" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="20" bodyend="30"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1af8d7f85a0d52d3560db6d36cf9b44ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_getpshared</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *pshared)</argsstring>
        <name>pthread_mutexattr_getpshared</name>
        <param>
          <type>const <ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="222" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="32" bodyend="40"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a73bd8697b91e0ee9a63c30052ac9f72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_setpshared</definition>
        <argsstring>(pthread_mutexattr_t *attr, int pshared)</argsstring>
        <name>pthread_mutexattr_setpshared</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="223" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="42" bodyend="50"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" compoundref="pthread_8h" startline="82">pthread_mutexattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ab006d856e7ec59dc82d2e4a69d49f5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_gettype</definition>
        <argsstring>(pthread_mutexattr_t *attr, int *kind)</argsstring>
        <name>pthread_mutexattr_gettype</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="224" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="52" bodyend="60"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a4676cf36cad3bde781928419735e6fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_settype</definition>
        <argsstring>(pthread_mutexattr_t *attr, int kind)</argsstring>
        <name>pthread_mutexattr_settype</name>
        <param>
          <type><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="225" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutexattr.c" bodystart="62" bodyend="70"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a7454d249ed94ad5d5e57ba1529d7a7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_init</definition>
        <argsstring>(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutex_init</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <param>
          <type>const <ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="231" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="26" bodyend="43"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a3fdfabe67e940844d49b5f98809907f3" compoundref="pthread_8h" startline="92">pthread_mutex::event</references>
        <references refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" compoundref="pthread_8h" startline="83">pthread_mutexattr::kind</references>
        <references refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" compoundref="pthread_8h" startline="90">pthread_mutex::kind</references>
        <references refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" compoundref="pthread_8h" startline="88">pthread_mutex::lock</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" compoundref="pthread_8h" startline="79">PTHREAD_MUTEX_DEFAULT</references>
        <references refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" compoundref="pthread_8h" startline="89">pthread_mutex::recursion</references>
        <references refid="structpthread__mutex_1abd1e1875e0231a5dd6146adb8d6380c0" compoundref="pthread_8h" startline="93">pthread_mutex::time</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a3cf620ff3a40af11d79cf28901dc55e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_destroy</definition>
        <argsstring>(pthread_mutex_t *mutex)</argsstring>
        <name>pthread_mutex_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="232" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="46" bodyend="65"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a3fdfabe67e940844d49b5f98809907f3" compoundref="pthread_8h" startline="92">pthread_mutex::event</references>
        <references refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" compoundref="pthread_8h" startline="90">pthread_mutex::kind</references>
        <references refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" compoundref="pthread_8h" startline="88">pthread_mutex::lock</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" compoundref="pthread_8h" startline="89">pthread_mutex::recursion</references>
        <references refid="structpthread__mutex_1abd1e1875e0231a5dd6146adb8d6380c0" compoundref="pthread_8h" startline="93">pthread_mutex::time</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a12809c44718c21544ceb280dc1a53573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_lock</definition>
        <argsstring>(pthread_mutex_t *mutex)</argsstring>
        <name>pthread_mutex_lock</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="233" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="67" bodyend="89"/>
        <references refid="pthread__mutex_8c_1a09a80d595723a7cb36229098892878f0" compoundref="pthread__mutex_8c" startline="9" endline="24">__locked_mtx</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" compoundref="pthread_8h" startline="90">pthread_mutex::kind</references>
        <references refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" compoundref="pthread_8h" startline="88">pthread_mutex::lock</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="pthread_8h_1aaf502496651f95b06be861af7902cb23" compoundref="pthread_8h" startline="78">PTHREAD_MUTEX_ERRORCHECK</references>
        <references refid="pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645" compoundref="pthread_8h" startline="77">PTHREAD_MUTEX_RECURSIVE</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" compoundref="pthread_8h" startline="89">pthread_mutex::recursion</references>
        <references refid="nanosleep_8c_1a357cd4b34c13011749dfffb42b489f09">sched_yield</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a5f197c3d769dee7a09d911241a7b6766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_timedlock</definition>
        <argsstring>(pthread_mutex_t *mutex, const struct timespec *abstime)</argsstring>
        <name>pthread_mutex_timedlock</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abstime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="234" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="92" bodyend="104"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread__mutex_8c_1a9d5a00f9e6e279cce1e875a48cb9188d" compoundref="pthread__mutex_8c" startline="67" endline="89">pthread_mutex_lock</references>
        <references refid="structpthread__mutex_1abd1e1875e0231a5dd6146adb8d6380c0" compoundref="pthread_8h" startline="93">pthread_mutex::time</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a27da386211db1a7e9a3b2a0db4d22144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_trylock</definition>
        <argsstring>(pthread_mutex_t *mutex)</argsstring>
        <name>pthread_mutex_trylock</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="235" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="107" bodyend="131"/>
        <references refid="pthread__mutex_8c_1a09a80d595723a7cb36229098892878f0" compoundref="pthread__mutex_8c" startline="9" endline="24">__locked_mtx</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" compoundref="pthread_8h" startline="90">pthread_mutex::kind</references>
        <references refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" compoundref="pthread_8h" startline="88">pthread_mutex::lock</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="pthread_8h_1aaf502496651f95b06be861af7902cb23" compoundref="pthread_8h" startline="78">PTHREAD_MUTEX_ERRORCHECK</references>
        <references refid="pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645" compoundref="pthread_8h" startline="77">PTHREAD_MUTEX_RECURSIVE</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" compoundref="pthread_8h" startline="89">pthread_mutex::recursion</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a96184290ffb60e04c53a52869cf960a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutex_unlock</definition>
        <argsstring>(pthread_mutex_t *mutex)</argsstring>
        <name>pthread_mutex_unlock</name>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="236" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_mutex.c" bodystart="133" bodyend="153"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" compoundref="pthread_8h" startline="90">pthread_mutex::kind</references>
        <references refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" compoundref="pthread_8h" startline="88">pthread_mutex::lock</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="pthread_8h_1aaf502496651f95b06be861af7902cb23" compoundref="pthread_8h" startline="78">PTHREAD_MUTEX_ERRORCHECK</references>
        <references refid="pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645" compoundref="pthread_8h" startline="77">PTHREAD_MUTEX_RECURSIVE</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" compoundref="pthread_8h" startline="89">pthread_mutex::recursion</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a34083fe1cd54d5d67599b4cca593ffa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_condattr_init</definition>
        <argsstring>(pthread_condattr_t *attr)</argsstring>
        <name>pthread_condattr_init</name>
        <param>
          <type><ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="242" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_condattr.c" bodystart="7" bodyend="15"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" compoundref="pthread_8h" startline="102">pthread_condattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a066f082e4a085641043714e3bc4d70d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_condattr_destroy</definition>
        <argsstring>(pthread_condattr_t *attr)</argsstring>
        <name>pthread_condattr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="243" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_condattr.c" bodystart="18" bodyend="26"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" compoundref="pthread_8h" startline="102">pthread_condattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aff70de20d7bdac1310aa2cdcada218d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_condattr_getpshared</definition>
        <argsstring>(const pthread_condattr_t *attr, int *pshared)</argsstring>
        <name>pthread_condattr_getpshared</name>
        <param>
          <type>const <ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="244" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_condattr.c" bodystart="29" bodyend="38"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" compoundref="pthread_8h" startline="102">pthread_condattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a1a026d48926e804fed515bb01b0cbb45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_condattr_setpshared</definition>
        <argsstring>(pthread_condattr_t *attr, int pshared)</argsstring>
        <name>pthread_condattr_setpshared</name>
        <param>
          <type><ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="245" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_condattr.c" bodystart="41" bodyend="49"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" compoundref="pthread_8h" startline="102">pthread_condattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ad5b6c558bcd5260289981207b9ca9687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_init</definition>
        <argsstring>(pthread_cond_t *cond, const pthread_condattr_t *attr)</argsstring>
        <name>pthread_cond_init</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <param>
          <type>const <ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="251" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="13" bodyend="23"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" compoundref="pthread_8h" startline="107">pthread_cond::semaphore</references>
        <references refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" compoundref="pthread_8h" startline="106">pthread_cond::waiting</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aa1587e01856a579b78effd0a1a284a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_destroy</definition>
        <argsstring>(pthread_cond_t *cond)</argsstring>
        <name>pthread_cond_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="252" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="25" bodyend="41"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" compoundref="pthread_8h" startline="107">pthread_cond::semaphore</references>
        <references refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" compoundref="pthread_8h" startline="106">pthread_cond::waiting</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a907ae104b6dfd8fc12e23e84952aa7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_wait</definition>
        <argsstring>(pthread_cond_t *cond, pthread_mutex_t *mutex)</argsstring>
        <name>pthread_cond_wait</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="253" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="88" bodyend="90"/>
        <references refid="pthread__cond_8c_1a7b5e3293c3234f268ee29acf3571f7cd" compoundref="pthread__cond_8c" startline="44" endline="86">pthread_cond_timedwait</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ab03e3ab6546f661d2b2f83bc12559e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_timedwait</definition>
        <argsstring>(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime)</argsstring>
        <name>pthread_cond_timedwait</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <param>
          <type><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abstime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="254" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="44" bodyend="86"/>
        <references refid="structpthread__context_1ace03687a8a5dc35db9e23fdc96bf0667" compoundref="pthread__internal_8h" startline="45">pthread_context::cond</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" compoundref="pthread_8h" startline="91">pthread_mutex::owner</references>
        <references refid="pthread_8h_1a96184290ffb60e04c53a52869cf960a2" compoundref="pthread__mutex_8c" startline="133" endline="153">pthread_mutex_unlock</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="nanosleep_8c_1a357cd4b34c13011749dfffb42b489f09">sched_yield</references>
        <references refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" compoundref="pthread_8h" startline="107">pthread_cond::semaphore</references>
        <references refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" compoundref="pthread_8h" startline="106">pthread_cond::waiting</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a20f98235b024efb10e5c76a64f0d94e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_signal</definition>
        <argsstring>(pthread_cond_t *cond)</argsstring>
        <name>pthread_cond_signal</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="255" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="93" bodyend="114"/>
        <references refid="pthread__cond_8c_1a9ed893dd8f37e017f207c1c6ccdb41ec" compoundref="pthread__cond_8c" startline="9">__pthread_queue</references>
        <references refid="structpthread__context_1ace03687a8a5dc35db9e23fdc96bf0667" compoundref="pthread__internal_8h" startline="45">pthread_context::cond</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__context_1a876fe0d5cfa5b9886c90e5936b98f992" compoundref="pthread__internal_8h" startline="47">pthread_context::next</references>
        <references refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" compoundref="pthread_8h" startline="107">pthread_cond::semaphore</references>
        <references refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" compoundref="pthread_8h" startline="106">pthread_cond::waiting</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1afc4b19aa8ea2dce0956579ce878b4998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_cond_broadcast</definition>
        <argsstring>(pthread_cond_t *cond)</argsstring>
        <name>pthread_cond_broadcast</name>
        <param>
          <type><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref> *</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="256" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_cond.c" bodystart="116" bodyend="136"/>
        <references refid="pthread__cond_8c_1a9ed893dd8f37e017f207c1c6ccdb41ec" compoundref="pthread__cond_8c" startline="9">__pthread_queue</references>
        <references refid="structpthread__context_1ace03687a8a5dc35db9e23fdc96bf0667" compoundref="pthread__internal_8h" startline="45">pthread_context::cond</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__context_1a876fe0d5cfa5b9886c90e5936b98f992" compoundref="pthread__internal_8h" startline="47">pthread_context::next</references>
        <references refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" compoundref="pthread_8h" startline="107">pthread_cond::semaphore</references>
        <references refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" compoundref="pthread_8h" startline="106">pthread_cond::waiting</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a9f357dc609e57f516cbbbf845f92727d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrierattr_init</definition>
        <argsstring>(pthread_barrierattr_t *attr)</argsstring>
        <name>pthread_barrierattr_init</name>
        <param>
          <type><ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="262" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrierattr.c" bodystart="9" bodyend="17"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" compoundref="pthread_8h" startline="117">pthread_barrierattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1abde7f3bdc7510a89b5ebe7ef70bb0f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrierattr_destroy</definition>
        <argsstring>(pthread_barrierattr_t *attr)</argsstring>
        <name>pthread_barrierattr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="263" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrierattr.c" bodystart="20" bodyend="28"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" compoundref="pthread_8h" startline="117">pthread_barrierattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ac39928db5b4e7c041e69ecfa1973e579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrierattr_getpshared</definition>
        <argsstring>(const pthread_barrierattr_t *attr, int *pshared)</argsstring>
        <name>pthread_barrierattr_getpshared</name>
        <param>
          <type>const <ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="264" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrierattr.c" bodystart="31" bodyend="44"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" compoundref="pthread_8h" startline="117">pthread_barrierattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aa9c3c335f5bcf702fe85a1c12dcdc70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrierattr_setpshared</definition>
        <argsstring>(pthread_barrierattr_t *attr, int pshared)</argsstring>
        <name>pthread_barrierattr_setpshared</name>
        <param>
          <type><ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="265" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrierattr.c" bodystart="47" bodyend="55"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" compoundref="pthread_8h" startline="117">pthread_barrierattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a8ccfa0d7e4ed11ad58990e4bc88d6563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrier_init</definition>
        <argsstring>(pthread_barrier_t *barrier, const pthread_barrierattr_t *attr, unsigned int count)</argsstring>
        <name>pthread_barrier_init</name>
        <param>
          <type><ref refid="pthread_8h_1a0af030d8520cb3271d895b21a5ecca34" kindref="member">pthread_barrier_t</ref> *</type>
          <declname>barrier</declname>
        </param>
        <param>
          <type>const <ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="271" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrier.c" bodystart="9" bodyend="25"/>
        <references refid="structpthread__barrier_1a3b8e6f276f11a62fb77525fe5d11b18c" compoundref="pthread_8h" startline="122">pthread_barrier::curr_height</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrier_1a71938bf4346ecc8a2f997f18df267ae0" compoundref="pthread_8h" startline="123">pthread_barrier::init_height</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ae8ef9b4e2d7feaa1a28159991e7433ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrier_destroy</definition>
        <argsstring>(pthread_barrier_t *barrier)</argsstring>
        <name>pthread_barrier_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a0af030d8520cb3271d895b21a5ecca34" kindref="member">pthread_barrier_t</ref> *</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="272" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrier.c" bodystart="28" bodyend="39"/>
        <references refid="structpthread__barrier_1a3b8e6f276f11a62fb77525fe5d11b18c" compoundref="pthread_8h" startline="122">pthread_barrier::curr_height</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrier_1a71938bf4346ecc8a2f997f18df267ae0" compoundref="pthread_8h" startline="123">pthread_barrier::init_height</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a85f92053b4d12aa94927b364b5b757d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_barrier_wait</definition>
        <argsstring>(pthread_barrier_t *barrier)</argsstring>
        <name>pthread_barrier_wait</name>
        <param>
          <type><ref refid="pthread_8h_1a0af030d8520cb3271d895b21a5ecca34" kindref="member">pthread_barrier_t</ref> *</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="273" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_barrier.c" bodystart="42" bodyend="54"/>
        <references refid="structpthread__barrier_1a3b8e6f276f11a62fb77525fe5d11b18c" compoundref="pthread_8h" startline="122">pthread_barrier::curr_height</references>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__barrier_1a71938bf4346ecc8a2f997f18df267ae0" compoundref="pthread_8h" startline="123">pthread_barrier::init_height</references>
        <references refid="nanosleep_8c_1a357cd4b34c13011749dfffb42b489f09">sched_yield</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a9d831af0179ed16d1b6cbeba0304810b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlockattr_init</definition>
        <argsstring>(pthread_rwlockattr_t *attr)</argsstring>
        <name>pthread_rwlockattr_init</name>
        <param>
          <type><ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="279" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlockattr.c" bodystart="9" bodyend="17"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" compoundref="pthread_8h" startline="128">pthread_rwlockattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a78a54e67f0afe2601dbda0a904fa0bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlockattr_destroy</definition>
        <argsstring>(pthread_rwlockattr_t *attr)</argsstring>
        <name>pthread_rwlockattr_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="280" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlockattr.c" bodystart="19" bodyend="27"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" compoundref="pthread_8h" startline="128">pthread_rwlockattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a4a749019aadaa5443785ab81a9e11a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlockattr_getpshared</definition>
        <argsstring>(const pthread_rwlockattr_t *attr, int *pshared)</argsstring>
        <name>pthread_rwlockattr_getpshared</name>
        <param>
          <type>const <ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="281" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlockattr.c" bodystart="29" bodyend="42"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" compoundref="pthread_8h" startline="128">pthread_rwlockattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ae6550aa6aede71f618bb7457f3e50524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlockattr_setpshared</definition>
        <argsstring>(pthread_rwlockattr_t *attr, int pshared)</argsstring>
        <name>pthread_rwlockattr_setpshared</name>
        <param>
          <type><ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="282" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlockattr.c" bodystart="44" bodyend="52"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" compoundref="pthread_8h" startline="128">pthread_rwlockattr::pshared</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a5ee98536e18644a68d1e5fa377ba827b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_init</definition>
        <argsstring>(pthread_rwlock_t *lock, const pthread_rwlockattr_t *attr)</argsstring>
        <name>pthread_rwlock_init</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>const <ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="288" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="10" bodyend="32"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlock_1ae49a53d46712b0d4af191e85a622da1d" compoundref="pthread_8h" startline="136">pthread_rwlock::exclusive_waiters</references>
        <references refid="structpthread__rwlock_1a5d8b56e7998376aa9f5908a560daadb7" compoundref="pthread_8h" startline="138">pthread_rwlock::num_exclusive_waiters</references>
        <references refid="structpthread__rwlock_1af637581bd0ea0328763d041937160fff" compoundref="pthread_8h" startline="137">pthread_rwlock::num_shared_waiters</references>
        <references refid="structpthread__rwlock_1a7918a35d8e929df9c7f1fd9f12e9efcf" compoundref="pthread_8h" startline="139">pthread_rwlock::owner</references>
        <references refid="pthread_8h_1a7454d249ed94ad5d5e57ba1529d7a7f2" compoundref="pthread__mutex_8c" startline="26" endline="43">pthread_mutex_init</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
        <references refid="structpthread__rwlock_1a513e968cb2dea01c044a3304c26b1d07" compoundref="pthread_8h" startline="135">pthread_rwlock::shared_waiters</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a1166bfb9159f43886513740ffcf52100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_destroy</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="289" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="34" bodyend="61"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__rwlock_1ae49a53d46712b0d4af191e85a622da1d" compoundref="pthread_8h" startline="136">pthread_rwlock::exclusive_waiters</references>
        <references refid="structpthread__rwlock_1a5d8b56e7998376aa9f5908a560daadb7" compoundref="pthread_8h" startline="138">pthread_rwlock::num_exclusive_waiters</references>
        <references refid="structpthread__rwlock_1af637581bd0ea0328763d041937160fff" compoundref="pthread_8h" startline="137">pthread_rwlock::num_shared_waiters</references>
        <references refid="structpthread__rwlock_1a7918a35d8e929df9c7f1fd9f12e9efcf" compoundref="pthread_8h" startline="139">pthread_rwlock::owner</references>
        <references refid="pthread_8h_1a3cf620ff3a40af11d79cf28901dc55e2" compoundref="pthread__mutex_8c" startline="46" endline="65">pthread_mutex_destroy</references>
        <references refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" compoundref="pthread__self_8c" startline="10" endline="27">pthread_self</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
        <references refid="structpthread__rwlock_1a513e968cb2dea01c044a3304c26b1d07" compoundref="pthread_8h" startline="135">pthread_rwlock::shared_waiters</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a22beda5fdbe327286232d6fa3072d0be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_tryrdlock</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_tryrdlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="290" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="63" bodyend="70"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a27da386211db1a7e9a3b2a0db4d22144" compoundref="pthread__mutex_8c" startline="107" endline="131">pthread_mutex_trylock</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1af876ea2a1537ebb147ca1ac773d341ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_trywrlock</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_trywrlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="291" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="72" bodyend="79"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a27da386211db1a7e9a3b2a0db4d22144" compoundref="pthread__mutex_8c" startline="107" endline="131">pthread_mutex_trylock</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a41d0ae7d642f9e869275a1e35c7e7345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_rdlock</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_rdlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="292" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="81" bodyend="88"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a12809c44718c21544ceb280dc1a53573" compoundref="pthread__mutex_8c" startline="67" endline="89">pthread_mutex_lock</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a75e229e656ee4048da890bff45eb056b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_timedrdlock</definition>
        <argsstring>(pthread_rwlock_t *lock, const struct timespec *abstime)</argsstring>
        <name>pthread_rwlock_timedrdlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abstime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="293" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="90" bodyend="97"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a5f197c3d769dee7a09d911241a7b6766" compoundref="pthread__mutex_8c" startline="92" endline="104">pthread_mutex_timedlock</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a2bce91a7ca8b6a86d5ad896a7f4353ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_wrlock</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_wrlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="294" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="99" bodyend="106"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a12809c44718c21544ceb280dc1a53573" compoundref="pthread__mutex_8c" startline="67" endline="89">pthread_mutex_lock</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1ac316d4073ca8a30c8b0b47d3c6cf6e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_timedwrlock</definition>
        <argsstring>(pthread_rwlock_t *lock, const struct timespec *abstime)</argsstring>
        <name>pthread_rwlock_timedwrlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abstime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="295" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="108" bodyend="115"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a5f197c3d769dee7a09d911241a7b6766" compoundref="pthread__mutex_8c" startline="92" endline="104">pthread_mutex_timedlock</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a294df74b6a0613e5b0b18850ee24f2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_rwlock_unlock</definition>
        <argsstring>(pthread_rwlock_t *lock)</argsstring>
        <name>pthread_rwlock_unlock</name>
        <param>
          <type><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="296" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_rwlock.c" bodystart="117" bodyend="130"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="pthread_8h_1a96184290ffb60e04c53a52869cf960a2" compoundref="pthread__mutex_8c" startline="133" endline="153">pthread_mutex_unlock</references>
        <references refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" compoundref="pthread_8h" startline="133">pthread_rwlock::rdmutex</references>
        <references refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" compoundref="pthread_8h" startline="134">pthread_rwlock::wrmutex</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1aa35638e0561b356d978095ebb3ca6401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_spin_init</definition>
        <argsstring>(pthread_spinlock_t *lock, int pshared)</argsstring>
        <name>pthread_spin_init</name>
        <param>
          <type><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="302" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_spin.c" bodystart="7" bodyend="17"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" compoundref="pthread_8h" startline="150">pthread_spinlock::interlock</references>
        <references refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" compoundref="pthread_8h" startline="151">pthread_spinlock::mutex</references>
        <references refid="pthread_8h_1a7454d249ed94ad5d5e57ba1529d7a7f2" compoundref="pthread__mutex_8c" startline="26" endline="43">pthread_mutex_init</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a87f8f1b6530c064af125525668de7573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_spin_destroy</definition>
        <argsstring>(pthread_spinlock_t *lock)</argsstring>
        <name>pthread_spin_destroy</name>
        <param>
          <type><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="303" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_spin.c" bodystart="19" bodyend="29"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" compoundref="pthread_8h" startline="150">pthread_spinlock::interlock</references>
        <references refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" compoundref="pthread_8h" startline="151">pthread_spinlock::mutex</references>
        <references refid="pthread_8h_1a3cf620ff3a40af11d79cf28901dc55e2" compoundref="pthread__mutex_8c" startline="46" endline="65">pthread_mutex_destroy</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a5a807aedbbb69d36163c9fd6fa661f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_spin_lock</definition>
        <argsstring>(pthread_spinlock_t *lock)</argsstring>
        <name>pthread_spin_lock</name>
        <param>
          <type><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="304" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_spin.c" bodystart="31" bodyend="43"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" compoundref="pthread_8h" startline="150">pthread_spinlock::interlock</references>
        <references refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" compoundref="pthread_8h" startline="151">pthread_spinlock::mutex</references>
        <references refid="pthread_8h_1a12809c44718c21544ceb280dc1a53573" compoundref="pthread__mutex_8c" startline="67" endline="89">pthread_mutex_lock</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1acc1bbcf93cbba8a8f5a8dec2d2db9318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_spin_trylock</definition>
        <argsstring>(pthread_spinlock_t *lock)</argsstring>
        <name>pthread_spin_trylock</name>
        <param>
          <type><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="305" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_spin.c" bodystart="45" bodyend="57"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" compoundref="pthread_8h" startline="150">pthread_spinlock::interlock</references>
        <references refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" compoundref="pthread_8h" startline="151">pthread_spinlock::mutex</references>
        <references refid="pthread_8h_1a27da386211db1a7e9a3b2a0db4d22144" compoundref="pthread__mutex_8c" startline="107" endline="131">pthread_mutex_trylock</references>
      </memberdef>
      <memberdef kind="function" id="pthread_8h_1a3aff65ef8d5fb28a7be0403661724eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_spin_unlock</definition>
        <argsstring>(pthread_spinlock_t *lock)</argsstring>
        <name>pthread_spin_unlock</name>
        <param>
          <type><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref> *</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h" line="306" column="1" bodyfile="/opt/prj/aPlus/usr/src/libpthread/src/pthread_spin.c" bodystart="59" bodyend="71"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" compoundref="pthread_8h" startline="150">pthread_spinlock::interlock</references>
        <references refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" compoundref="pthread_8h" startline="151">pthread_spinlock::mutex</references>
        <references refid="pthread_8h_1a96184290ffb60e04c53a52869cf960a2" compoundref="pthread__mutex_8c" startline="133" endline="153">pthread_mutex_unlock</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>pthread.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Author:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Antonio<sp/>Natale<sp/>&lt;inferdevil97@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Antonio<sp/>Natale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PTHREAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sched.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="pthread_8h_1a5e89527a7c4b94907d559a975d5850ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_THREADS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="pthread_8h_1afab214cf0e27a8f9c17c5412d0a7c88d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref><sp/><ref refid="pthread_8h_1afab214cf0e27a8f9c17c5412d0a7c88d" kindref="member">tls_t</ref>;</highlight></codeline>
<codeline lineno="36" refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref>;</highlight></codeline>
<codeline lineno="37" refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref>;</highlight></codeline>
<codeline lineno="38" refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1afab214cf0e27a8f9c17c5412d0a7c88d" kindref="member">tls_t</ref><sp/><ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="pthread_8h_1afb10d234d831c7b57768d62786748bc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_CREATE_JOINABLE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="pthread_8h_1a391c5eb0f6b5febc48710d0be3f62394" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_CREATE_DETACHED<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="pthread_8h_1a470fccc57c4d7c3846e446a17cd23573" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_INHERIT_SCHED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="pthread_8h_1ad45abe03c8232518b6995e73172fe053" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_EXPLICIT_SCHED<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="pthread_8h_1aeab18be4f4ee13db4b0b65c6768fb539" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_SCOPE_PROCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="pthread_8h_1ab754f4339f76c46b8f57413c03e8ec65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_SCOPE_SYSTEM<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="pthread_8h_1aaf18882a8a6b82c7b7849a645f4445ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_CANCEL_ENABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="pthread_8h_1a6c661332f782dcebc87b878990424b4c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_CANCEL_DISABLE<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="pthread_8h_1a443f2f512de9324bf77625041ecb04f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_PROCESS_PRIVATE<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="pthread_8h_1a07f3670a510cdb93233e84e1a0b50e89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_PROCESS_SHARED<sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structpthread__attr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__attr" kindref="compound">pthread_attr</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structpthread__attr_1a004b9c2b7c75177f4de0262277f48333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structpthread__attr_1a004b9c2b7c75177f4de0262277f48333" kindref="member">stackaddr</ref>;</highlight></codeline>
<codeline lineno="59" refid="structpthread__attr_1a8b8eaabf2bc9b4cec33d7764bbb115d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr_1a8b8eaabf2bc9b4cec33d7764bbb115d9" kindref="member">stacksize</ref>;</highlight></codeline>
<codeline lineno="60" refid="structpthread__attr_1a2ac0f3f9d4513024bbafc7db17c25a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr_1a2ac0f3f9d4513024bbafc7db17c25a46" kindref="member">detachstate</ref>;</highlight></codeline>
<codeline lineno="61" refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/><ref refid="structpthread__attr_1a371c70c9e51a2444860395f7045bbd3e" kindref="member">param</ref>;</highlight></codeline>
<codeline lineno="62" refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr_1ab6bef83bc858c0ffb3c8d0b461ba4396" kindref="member">inheritsched</ref>;</highlight></codeline>
<codeline lineno="63" refid="structpthread__attr_1a1d5ca4923f6814d754208080896a360a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr_1a1d5ca4923f6814d754208080896a360a" kindref="member">contentionscope</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><ref refid="pthread_8h_1ae242a79436919ba1cd46e38598bc17e7" kindref="member">pthread_attr_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structpthread__once" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__once" kindref="compound">pthread_once</ref><sp/>{</highlight></codeline>
<codeline lineno="68" refid="structpthread__once_1acffdc3852414e4eeece3c8e7cf80ffc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__once_1acffdc3852414e4eeece3c8e7cf80ffc1" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="69" refid="structpthread__once_1a2bebfebb49a5c75d10119824d5bba93c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__once_1a2bebfebb49a5c75d10119824d5bba93c" kindref="member">started</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a18773caa8d79a98514e4291b855c3d80" kindref="member">pthread_once_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="pthread_8h_1a59e22497b65fc305ddb5cea8b4990b51" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_ONCE_INIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>-1<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="pthread_8h_1aae4b650085c2599674938f503d6253cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_MUTEX_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="pthread_8h_1a715e9644a7183d98cb2c9dd41cb89645" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_MUTEX_RECURSIVE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="pthread_8h_1aaf502496651f95b06be861af7902cb23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_MUTEX_ERRORCHECK<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="pthread_8h_1a2a9b96c0491ae490c17d0b400bc427b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_MUTEX_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PTHREAD_MUTEX_NORMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structpthread__mutexattr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr</ref><sp/>{</highlight></codeline>
<codeline lineno="82" refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutexattr_1a886b6893f8e2ac727baa10ae3d5433a8" kindref="member">pshared</ref>;</highlight></codeline>
<codeline lineno="83" refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutexattr_1a8f33b94daf83faf08982414db0b16a0c" kindref="member">kind</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a32aba25ecddcfa6adc6391f85ef08d1a" kindref="member">pthread_mutexattr_t</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structpthread__mutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__mutex" kindref="compound">pthread_mutex</ref><sp/>{</highlight></codeline>
<codeline lineno="88" refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutex_1a039843af2bfee5ac32a1c4452108b833" kindref="member">lock</ref>;</highlight></codeline>
<codeline lineno="89" refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutex_1ad0a6948ac1d12f9ec3f11fea2ac07ff9" kindref="member">recursion</ref>;</highlight></codeline>
<codeline lineno="90" refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutex_1a0a817c827021f648ceba78fb34b61f62" kindref="member">kind</ref>;</highlight></codeline>
<codeline lineno="91" refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/><ref refid="structpthread__mutex_1a3d3ee80fcc9a148717677554d05d9d4a" kindref="member">owner</ref>;</highlight></codeline>
<codeline lineno="92" refid="structpthread__mutex_1a3fdfabe67e940844d49b5f98809907f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/><ref refid="structpthread__mutex_1a3fdfabe67e940844d49b5f98809907f3" kindref="member">event</ref>;</highlight></codeline>
<codeline lineno="93" refid="structpthread__mutex_1abd1e1875e0231a5dd6146adb8d6380c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutex_1abd1e1875e0231a5dd6146adb8d6380c0" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><ref refid="pthread_8h_1ad613e9ad2d8d9713a8440618e7a70bba" kindref="member">pthread_mutex_t</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="pthread_8h_1a84e55100366a6a8338a2af3b3f279686" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_MUTEX_INITIALIZER<sp/>{<sp/>0,<sp/>0,<sp/>-1,<sp/>-1,<sp/>-1<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="pthread_8h_1acff148607c8534833336adb03d3f7b5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP<sp/>{<sp/>0,<sp/>0,<sp/>-1,<sp/>-1,<sp/>-1<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structpthread__condattr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__condattr" kindref="compound">pthread_condattr</ref><sp/>{</highlight></codeline>
<codeline lineno="102" refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__condattr_1a2cf7aea8228b9cee52cc0eccc4492fd7" kindref="member">pshared</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a1cb4a4bcfaf20a38280f1511610f8c80" kindref="member">pthread_condattr_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structpthread__cond" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__cond" kindref="compound">pthread_cond</ref><sp/>{</highlight></codeline>
<codeline lineno="106" refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__cond_1a37ab813587afbb6cfc356963c7960776" kindref="member">waiting</ref>;</highlight></codeline>
<codeline lineno="107" refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/><ref refid="structpthread__cond_1add81721af4853baaa6a8f13733a527cc" kindref="member">semaphore</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a3fca5856f6b33b80711e4942c1e33a61" kindref="member">pthread_cond_t</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="pthread_8h_1aa7b867fe46f3660283fcb356c4fcbbf0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_COND_INITIALIZER<sp/>((pthread_cond_t)<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="pthread_8h_1a822c63bc662ad86cfb2dcec50edbb42b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_BARRIER_SERIAL_THREAD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>~0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="structpthread__barrierattr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr</ref><sp/>{</highlight></codeline>
<codeline lineno="117" refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__barrierattr_1a50ef34671e6743cc59c895dd878c4a86" kindref="member">pshared</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a8b994175b42c340d079d21007eaf51c7" kindref="member">pthread_barrierattr_t</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structpthread__barrier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__barrier" kindref="compound">pthread_barrier</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="structpthread__barrier_1a3b8e6f276f11a62fb77525fe5d11b18c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref><sp/><ref refid="structpthread__barrier_1a3b8e6f276f11a62fb77525fe5d11b18c" kindref="member">curr_height</ref>;</highlight></codeline>
<codeline lineno="123" refid="structpthread__barrier_1a71938bf4346ecc8a2f997f18df267ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="aplus_8h_1a53a0df51603c77c2aa5b9ea61b606a82" kindref="member">uint32_t</ref><sp/><ref refid="structpthread__barrier_1a71938bf4346ecc8a2f997f18df267ae0" kindref="member">init_height</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a0af030d8520cb3271d895b21a5ecca34" kindref="member">pthread_barrier_t</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structpthread__rwlockattr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr</ref><sp/>{</highlight></codeline>
<codeline lineno="128" refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__rwlockattr_1a8a113eba0407c92f6302fada4c4d7419" kindref="member">pshared</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a23f06ba3a10b2fba83fd75baa6e6c01a" kindref="member">pthread_rwlockattr_t</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structpthread__rwlock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock</ref><sp/>{</highlight></codeline>
<codeline lineno="133" refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/><ref refid="structpthread__rwlock_1aa525fa5ae59171418ede7d1894bf21fe" kindref="member">rdmutex</ref>;</highlight></codeline>
<codeline lineno="134" refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/><ref refid="structpthread__rwlock_1acebaf123f0d451e8aa6e7734c6bcca5b" kindref="member">wrmutex</ref>;</highlight></codeline>
<codeline lineno="135" refid="structpthread__rwlock_1a513e968cb2dea01c044a3304c26b1d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/><ref refid="structpthread__rwlock_1a513e968cb2dea01c044a3304c26b1d07" kindref="member">shared_waiters</ref>;</highlight></codeline>
<codeline lineno="136" refid="structpthread__rwlock_1ae49a53d46712b0d4af191e85a622da1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1aea4188cfb1472f9bb606fd2566133e34" kindref="member">handle_t</ref><sp/><ref refid="structpthread__rwlock_1ae49a53d46712b0d4af191e85a622da1d" kindref="member">exclusive_waiters</ref>;</highlight></codeline>
<codeline lineno="137" refid="structpthread__rwlock_1af637581bd0ea0328763d041937160fff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__rwlock_1af637581bd0ea0328763d041937160fff" kindref="member">num_shared_waiters</ref>;</highlight></codeline>
<codeline lineno="138" refid="structpthread__rwlock_1a5d8b56e7998376aa9f5908a560daadb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__rwlock_1a5d8b56e7998376aa9f5908a560daadb7" kindref="member">num_exclusive_waiters</ref>;</highlight></codeline>
<codeline lineno="139" refid="structpthread__rwlock_1a7918a35d8e929df9c7f1fd9f12e9efcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/><ref refid="structpthread__rwlock_1a7918a35d8e929df9c7f1fd9f12e9efcf" kindref="member">owner</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><ref refid="pthread_8h_1aadbc8ed314ebff885f0c70dcfccbdea7" kindref="member">pthread_rwlock_t</ref>;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="pthread_8h_1aa92fd7b492a8a5b31b2f8b3b6039c622" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_RWLOCK_INITIALIZER<sp/>{<sp/>PTHREAD_MUTEX_INITIALIZER,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="pthread_8h_1aabe0fad730afb8dd41f42bdda6f6ae81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPINLOCK_UNLOCKED<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="pthread_8h_1a1521727499f19b6459d150df04a2e445" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPINLOCK_LOCKED<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="pthread_8h_1a5e10ca049cf7b35f19b7cf24805f604a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPINLOCK_USEMUTEX<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structpthread__spinlock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock</ref><sp/>{</highlight></codeline>
<codeline lineno="150" refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpthread__spinlock_1a7b8aa3d5e657c6e399aa7a94c8c6d4fe" kindref="member">interlock</ref>;</highlight></codeline>
<codeline lineno="151" refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/><ref refid="structpthread__spinlock_1aebd79085a40b0d251d747a24f77746f5" kindref="member">mutex</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/><ref refid="pthread_8h_1a89b34d06ba0b6d13117e0043ea284800" kindref="member">pthread_spinlock_t</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="pthread_8h_1ad4620a03c26b4119bf642a7f53df4fb2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PTHREAD_SPINLOCK_INITIALIZER<sp/>{<sp/>0,<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>attribute<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a0b85ebb1e3aac081a4c0a5e85ae3cbe9" kindref="member">pthread_attr_init</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a4bcdbf47c17c7dcc51e9f05f5cb56d81" kindref="member">pthread_attr_destroy</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a391c34da42e68ddd24f5ee0c070d5c4f" kindref="member">pthread_attr_getdetachstate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*detachstate);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ae6ee78c307d8467b34a9b0c330993a54" kindref="member">pthread_attr_setdetachstate</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>detachstate);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1add78bd0e6395c9fbd8ed170a67da0b87" kindref="member">pthread_attr_getstackaddr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**stackaddr);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a298a51c79184546ef78800ea6d4463b9" kindref="member">pthread_attr_setstackaddr</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*stackaddr);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ae23600d4670359ab12bfba20db2c9a37" kindref="member">pthread_attr_getstacksize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*stacksize);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a812a9a455ae2ef2bb0dca4fff201a281" kindref="member">pthread_attr_setstacksize</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stacksize);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1afd3d272d702481044f8a8cd253fd9b47" kindref="member">pthread_attr_getschedparam</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*param);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a579e6529f0ce482312a5e77ac61cb4d5" kindref="member">pthread_attr_setschedparam</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*param);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a176ad27074237a3eea7bf8fccb911479" kindref="member">pthread_attr_getschedpolicy</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*policy);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a79b4c9e71486a87ef3014f1c660b33eb" kindref="member">pthread_attr_setschedpolicy</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ae83dac484200d8cdb85e59cb8a59ca92" kindref="member">pthread_attr_getinheritsched</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*inheritsched);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ad437fe8caa3ef9f0cb7d69f6f6479df9" kindref="member">pthread_attr_setinheritsched</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inheritsched);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ad3fe01698c4fad85bb5cc3f9a2e82ea3" kindref="member">pthread_attr_getscope</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*contentionscope);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a6d8d320a882ba044a064975dddcf9ced" kindref="member">pthread_attr_setscope</ref>(<ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contentionscope);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a6933a96c86c4fbebef09c9cbc0625e81" kindref="member">pthread_create</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>*thread,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__attr" kindref="compound">pthread_attr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*start)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a7c275c509c26566b6dd95a2de1668a2f" kindref="member">pthread_detach</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>thread);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a98ec817164a6641eda2341de473b659d" kindref="member">pthread_equal</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>t1,<sp/><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>t2);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a090bdc13141e76205fab4cb3c5fab0e4" kindref="member">pthread_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value_ptr);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aa79c99cc7b194918a2def257246f11c6" kindref="member">pthread_join</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>thread,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**value_ptr);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/><ref refid="pthread_8h_1a4c4f5f3b4f8f45d9d897847d53b11aaa" kindref="member">pthread_self</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a9e77a80c073787bf9a593e9c619dce27" kindref="member">pthread_cancel</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>thread);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a37075410fbbaad7ee93c95375fc86e0e" kindref="member">pthread_setcancelstate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*oldstate);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aab579bcfcf0662a0c1e35fd82162e61d" kindref="member">pthread_setcanceltype</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="iso9660_8h_1a6def72cbab7e986d0ac5dc7291e1394a" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*oldtype);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1af1c95282ab2bea25f0888a19652cd41f" kindref="member">pthread_testcancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a196103ac97710dad7a93fd6c188cc999" kindref="member">pthread_once</ref>(<ref refid="structpthread__once" kindref="compound">pthread_once_t</ref><sp/>*once_control,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*init_routine)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scheduling<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a14f50e1f5d815c90f1f4225eca5d3a8c" kindref="member">pthread_setschedparam</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>thread,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*param);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aae9850b3759769c748727e171c4c6e61" kindref="member">pthread_getschedparam</ref>(<ref refid="pthread_8h_1a6766c2345d5c6fe6407d9f6b844e584a" kindref="member">pthread_t</ref><sp/>thread,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*policy,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*param);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aee776aa5481b87ca7e7f959a01b50bea" kindref="member">pthread_setconcurrency</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1afb4344ea91774ba279ea5df3cb656ebc" kindref="member">pthread_getconcurrency</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread<sp/>specific<sp/>data<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1af4b7ced8ecff505380fe8216244a3764" kindref="member">pthread_key_create</ref>(<ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref><sp/>*key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*destructor)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aee96306dc79294927ee840bb4de2244b" kindref="member">pthread_key_delete</ref>(<ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref><sp/>key);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a2187333dd46ce08d9d2e044f79fad705" kindref="member">pthread_setspecific</ref>(<ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref><sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="attribute_8h_1ae7f66047e6e39ba2bb6af8b95f00d1dd" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pthread_8h_1a31469375891078185bda93f0e4411a2c" kindref="member">pthread_getspecific</ref>(<ref refid="pthread_8h_1a965dffa696273f72e4b513905c63a3ad" kindref="member">pthread_key_t</ref><sp/>key);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mutex<sp/>attribute<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1af98f6b6c483077a39d1400b1de1577b8" kindref="member">pthread_mutexattr_init</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a2321aabf58224b06021185708d0f9658" kindref="member">pthread_mutexattr_destroy</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1af8d7f85a0d52d3560db6d36cf9b44ac0" kindref="member">pthread_mutexattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a73bd8697b91e0ee9a63c30052ac9f72f" kindref="member">pthread_mutexattr_setpshared</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ab006d856e7ec59dc82d2e4a69d49f5dc" kindref="member">pthread_mutexattr_gettype</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*kind);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a4676cf36cad3bde781928419735e6fb7" kindref="member">pthread_mutexattr_settype</ref>(<ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mutex<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a7454d249ed94ad5d5e57ba1529d7a7f2" kindref="member">pthread_mutex_init</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__mutexattr" kindref="compound">pthread_mutexattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a3cf620ff3a40af11d79cf28901dc55e2" kindref="member">pthread_mutex_destroy</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a12809c44718c21544ceb280dc1a53573" kindref="member">pthread_mutex_lock</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a5f197c3d769dee7a09d911241a7b6766" kindref="member">pthread_mutex_timedlock</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*abstime);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a27da386211db1a7e9a3b2a0db4d22144" kindref="member">pthread_mutex_trylock</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a96184290ffb60e04c53a52869cf960a2" kindref="member">pthread_mutex_unlock</ref>(<ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Condition<sp/>variable<sp/>attribute<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a34083fe1cd54d5d67599b4cca593ffa4" kindref="member">pthread_condattr_init</ref>(<ref refid="structpthread__condattr" kindref="compound">pthread_condattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a066f082e4a085641043714e3bc4d70d7" kindref="member">pthread_condattr_destroy</ref>(<ref refid="structpthread__condattr" kindref="compound">pthread_condattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aff70de20d7bdac1310aa2cdcada218d4" kindref="member">pthread_condattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__condattr" kindref="compound">pthread_condattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a1a026d48926e804fed515bb01b0cbb45" kindref="member">pthread_condattr_setpshared</ref>(<ref refid="structpthread__condattr" kindref="compound">pthread_condattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Condition<sp/>variable<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ad5b6c558bcd5260289981207b9ca9687" kindref="member">pthread_cond_init</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__condattr" kindref="compound">pthread_condattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aa1587e01856a579b78effd0a1a284a47" kindref="member">pthread_cond_destroy</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a907ae104b6dfd8fc12e23e84952aa7ca" kindref="member">pthread_cond_wait</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond,<sp/><ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ab03e3ab6546f661d2b2f83bc12559e40" kindref="member">pthread_cond_timedwait</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond,<sp/><ref refid="structpthread__mutex" kindref="compound">pthread_mutex_t</ref><sp/>*mutex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*abstime);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a20f98235b024efb10e5c76a64f0d94e5" kindref="member">pthread_cond_signal</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1afc4b19aa8ea2dce0956579ce878b4998" kindref="member">pthread_cond_broadcast</ref>(<ref refid="structpthread__cond" kindref="compound">pthread_cond_t</ref><sp/>*cond);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Barrier<sp/>attribute<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a9f357dc609e57f516cbbbf845f92727d" kindref="member">pthread_barrierattr_init</ref>(<ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1abde7f3bdc7510a89b5ebe7ef70bb0f80" kindref="member">pthread_barrierattr_destroy</ref>(<ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ac39928db5b4e7c041e69ecfa1973e579" kindref="member">pthread_barrierattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aa9c3c335f5bcf702fe85a1c12dcdc70e" kindref="member">pthread_barrierattr_setpshared</ref>(<ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Barrier<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a8ccfa0d7e4ed11ad58990e4bc88d6563" kindref="member">pthread_barrier_init</ref>(<ref refid="structpthread__barrier" kindref="compound">pthread_barrier_t</ref><sp/>*barrier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__barrierattr" kindref="compound">pthread_barrierattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ae8ef9b4e2d7feaa1a28159991e7433ac" kindref="member">pthread_barrier_destroy</ref>(<ref refid="structpthread__barrier" kindref="compound">pthread_barrier_t</ref><sp/>*barrier);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a85f92053b4d12aa94927b364b5b757d9" kindref="member">pthread_barrier_wait</ref>(<ref refid="structpthread__barrier" kindref="compound">pthread_barrier_t</ref><sp/>*barrier);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read-write<sp/>lock<sp/>attribute<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a9d831af0179ed16d1b6cbeba0304810b" kindref="member">pthread_rwlockattr_init</ref>(<ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a78a54e67f0afe2601dbda0a904fa0bdf" kindref="member">pthread_rwlockattr_destroy</ref>(<ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a4a749019aadaa5443785ab81a9e11a86" kindref="member">pthread_rwlockattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ae6550aa6aede71f618bb7457f3e50524" kindref="member">pthread_rwlockattr_setpshared</ref>(<ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr_t</ref><sp/>*attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read-write<sp/>lock<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a5ee98536e18644a68d1e5fa377ba827b" kindref="member">pthread_rwlock_init</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*<ref refid="spinlock_8h_1aea28b4c44db4f0f1d0f222d6382c04c0" kindref="member">lock</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpthread__rwlockattr" kindref="compound">pthread_rwlockattr_t</ref><sp/>*attr);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a1166bfb9159f43886513740ffcf52100" kindref="member">pthread_rwlock_destroy</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a22beda5fdbe327286232d6fa3072d0be" kindref="member">pthread_rwlock_tryrdlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1af876ea2a1537ebb147ca1ac773d341ea" kindref="member">pthread_rwlock_trywrlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a41d0ae7d642f9e869275a1e35c7e7345" kindref="member">pthread_rwlock_rdlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a75e229e656ee4048da890bff45eb056b" kindref="member">pthread_rwlock_timedrdlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*abstime);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a2bce91a7ca8b6a86d5ad896a7f4353ae" kindref="member">pthread_rwlock_wrlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1ac316d4073ca8a30c8b0b47d3c6cf6e8b" kindref="member">pthread_rwlock_timedwrlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*abstime);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a294df74b6a0613e5b0b18850ee24f2a6" kindref="member">pthread_rwlock_unlock</ref>(<ref refid="structpthread__rwlock" kindref="compound">pthread_rwlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Spinlock<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1aa35638e0561b356d978095ebb3ca6401" kindref="member">pthread_spin_init</ref>(<ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock_t</ref><sp/>*lock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a87f8f1b6530c064af125525668de7573" kindref="member">pthread_spin_destroy</ref>(<ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a5a807aedbbb69d36163c9fd6fa661f69" kindref="member">pthread_spin_lock</ref>(<ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1acc1bbcf93cbba8a8f5a8dec2d2db9318" kindref="member">pthread_spin_trylock</ref>(<ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pthread_8h_1a3aff65ef8d5fb28a7be0403661724eee" kindref="member">pthread_spin_unlock</ref>(<ref refid="structpthread__spinlock" kindref="compound">pthread_spinlock_t</ref><sp/>*lock);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/opt/prj/aPlus/usr/src/libpthread/include/pthread.h"/>
  </compounddef>
</doxygen>
