<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="clone_8c" kind="file">
    <compoundname>clone.c</compoundname>
    <includes refid="aplus_8h" local="no">aplus.h</includes>
    <includes refid="syscall_8h" local="no">aplus/syscall.h</includes>
    <includes refid="task_8h" local="no">aplus/task.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="1332">
        <label>sys/stat.h</label>
      </node>
      <node id="1321">
        <label>stdarg.h</label>
      </node>
      <node id="1324">
        <label>aplus/attribute.h</label>
        <link refid="attribute_8h"/>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
      </node>
      <node id="1331">
        <label>aplus/fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
      </node>
      <node id="1320">
        <label>stdint.h</label>
      </node>
      <node id="1323">
        <label>aplus/syscall.h</label>
        <link refid="syscall_8h"/>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1336">
        <label>setjmp.h</label>
      </node>
      <node id="1330">
        <label>aplus/task.h</label>
        <link refid="task_8h"/>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
      </node>
      <node id="1337">
        <label>errno.h</label>
      </node>
      <node id="1326">
        <label>stddef.h</label>
      </node>
      <node id="1325">
        <label>aplus/list.h</label>
        <link refid="list_8h"/>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
      </node>
      <node id="1318">
        <label>src/syscall/clone.c</label>
        <link refid="clone.c"/>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1337" relation="include">
        </childnode>
      </node>
      <node id="1319">
        <label>aplus.h</label>
        <link refid="aplus_8h"/>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
      </node>
      <node id="1327">
        <label>sys/types.h</label>
      </node>
      <node id="1322">
        <label>string.h</label>
      </node>
      <node id="1334">
        <label>unistd.h</label>
      </node>
      <node id="1335">
        <label>signal.h</label>
      </node>
      <node id="1329">
        <label>aplus/mm.h</label>
        <link refid="mm_8h"/>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
      </node>
      <node id="1333">
        <label>sys/dirent.h</label>
        <link refid="dirent_8h"/>
        <childnode refid="1334" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
      </node>
      <node id="1328">
        <label>aplus/spinlock.h</label>
        <link refid="spinlock_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="clone_8c_1a4743b3673a8794b8e7bd0b6c91a63cd5" prot="public" static="no" mutable="no">
        <type><ref refid="task_8h_1a8aeef2cdb643462b97cd459a8e68cad3" kindref="member">task_t</ref> *</type>
        <definition>task_t* current_task</definition>
        <argsstring></argsstring>
        <name>current_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/syscall/clone.c" line="6" column="1" bodyfile="/opt/prj/aPlus/src/sched.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="clone_8c_1a14a069ba6b991078484ac2b7573a5f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sys_clone</definition>
        <argsstring>(int(*fn)(void *), void *child_stack, int flags, void *arg)</argsstring>
        <name>sys_clone</name>
        <param>
          <type>int(*)(void *)</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>child_stack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/syscall/clone.c" line="8" column="1" bodyfile="/opt/prj/aPlus/src/syscall/clone.c" bodystart="8" bodyend="25"/>
        <references refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" compoundref="errno_8c" startline="3">errno</references>
        <references refid="structtask_1ab56448ae42a75825ea923bd86648f3ae" compoundref="task_8h" startline="73">task::pid</references>
        <references refid="task_8c_1aa274b7334aace961395fdb788126712d" compoundref="task_8c" startline="115" endline="162">task_clone</references>
      </memberdef>
      <memberdef kind="function" id="clone_8c_1adeb0bff3f02079d3e65a1229d6161490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SYSCALL</definition>
        <argsstring>(sys_clone, 22)</argsstring>
        <name>SYSCALL</name>
        <param>
          <type><ref refid="clone_8c_1a14a069ba6b991078484ac2b7573a5f23" kindref="member">sys_clone</ref></type>
        </param>
        <param>
          <type>22</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/prj/aPlus/src/syscall/clone.c" line="27" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aplus_8h" kindref="compound">aplus.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="syscall_8h" kindref="compound">aplus/syscall.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="task_8h" kindref="compound">aplus/task.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structtask" kindref="compound">task_t</ref>*<sp/><ref refid="clone_8c_1a4743b3673a8794b8e7bd0b6c91a63cd5" kindref="member">current_task</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="clone_8c_1a14a069ba6b991078484ac2b7573a5f23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="clone_8c_1a14a069ba6b991078484ac2b7573a5f23" kindref="member">sys_clone</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*fn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>child_stack,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!current_task)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fn<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtask" kindref="compound">task_t</ref>*<sp/>child<sp/>=<sp/>(<ref refid="structtask" kindref="compound">task_t</ref>*)<sp/><ref refid="task_8c_1aa274b7334aace961395fdb788126712d" kindref="member">task_clone</ref>(fn,<sp/>arg,<sp/>child_stack);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!child)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errno_8c_1ad65a8842cc674e3ddf69355898c0ecbf" kindref="member">errno</ref><sp/>=<sp/>EFAULT;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child-&gt;<ref refid="structtask_1ab56448ae42a75825ea923bd86648f3ae" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="clone_8c_1adeb0bff3f02079d3e65a1229d6161490" kindref="member">SYSCALL</ref>(<ref refid="clone_8c_1a14a069ba6b991078484ac2b7573a5f23" kindref="member">sys_clone</ref>,<sp/>22);</highlight></codeline>
    </programlisting>
    <location file="/opt/prj/aPlus/src/syscall/clone.c"/>
  </compounddef>
</doxygen>
