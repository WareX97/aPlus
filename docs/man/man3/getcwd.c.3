.TH "usr/src/libposix/src/getcwd.c" 3 "Sun Nov 9 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libposix/src/getcwd.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <unistd\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static char * \fBstrcat_inv\fP (char *\fBdest\fP, char *str)"
.br
.ti -1c
.RI "char * \fBgetcwd\fP (char *buf, size_t \fBsize\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "char* getcwd (char *buf, size_tsize)"

.PP
Definition at line 17 of file getcwd\&.c\&.
.PP
References closedir(), dirent::d_ino, dirent::d_name, opendir(), readdir(), and strcat_inv()\&.
.PP
.nf
17                                      {
18     struct stat st;
19     char tmpbuf[1024];
20 
21     int root_ino = 0;
22     int curr_ino = 0;
23 
24     if(stat("/", &st) != 0)
25         return NULL;
26     root_ino = st\&.st_ino;
27 
28     if(stat("\&.", &st) != 0)
29         return NULL;
30     curr_ino = st\&.st_ino;
31 
32 
33     memset(buf, 0, size);
34     memset(tmpbuf, 0, 1024);
35     strcat(tmpbuf, "\&.");
36 
37     if(curr_ino == root_ino) {
38         strcat_inv(buf, "/");
39         return buf;
40     }
41 
42 
43     while(curr_ino != root_ino) {
44         if(stat(tmpbuf, &st) != 0)
45             return NULL;
46 
47         curr_ino = st\&.st_ino;
48 
49         if(curr_ino == root_ino)
50             break;
51 
52         strcat(tmpbuf, "/\&.\&.");
53         DIR* dir = opendir(tmpbuf);
54         if(!dir)
55             return NULL;
56 
57         struct dirent* ent;
58         while((ent = readdir(dir))) {
59             if(ent->d_ino == curr_ino) {
60                 strcat_inv(buf, ent->d_name);
61                 strcat_inv(buf, "/");           
62             }
63 
64             free(ent);
65         }
66 
67         closedir(dir);
68     }
69 
70     return buf;
71 }
.fi
.SS "static char* strcat_inv (char *dest, char *str)\fC [static]\fP"

.PP
Definition at line 7 of file getcwd\&.c\&.
.PP
References dest\&.
.PP
.nf
7                                                {
8     char* res = malloc(strlen(dest) + strlen(str));
9     strcpy(res, str);   
10     strcat(res, dest);
11     strcpy(dest, res);
12 
13     free(res);
14     return dest;
15 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
