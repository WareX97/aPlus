.TH "usr/src/libposix/src/scandir.c" 3 "Sun Nov 9 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libposix/src/scandir.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <dirent\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBscandir\fP (const char *pathname, struct \fBdirent\fP ***namelist, int(*select)(const struct \fBdirent\fP *), int(*compar)(const struct \fBdirent\fP **, const struct \fBdirent\fP **))"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int scandir (const char *pathname, struct \fBdirent\fP ***namelist, int(*)(const struct \fBdirent\fP *)select, int(*)(const struct \fBdirent\fP **, const struct \fBdirent\fP **)compar)"

.PP
Definition at line 11 of file scandir\&.c\&.
.PP
References d, errno, opendir(), and readdir()\&.
.PP
.nf
11                                                                                                                                                                   {
12     DIR* d = opendir(pathname);
13     if(d == NULL) {
14         errno = ENOENT;
15         return -1;
16     }
17 
18     if(namelist == NULL) {
19         errno = EINVAL;
20         return -1;
21     }
22 
23     const struct dirent* ent = NULL;
24     const struct dirent** lst = (const struct dirent**) *namelist;
25 
26     int index = 0;
27 
28 
29     while((ent = readdir(d))) {
30         if(select)
31             if(select(ent) != 0)
32                 continue;
33 
34         
35         if((index > 0) && (compar) && (compar(&lst[index - 1], &ent) > 0)) {
36             lst[index] = lst[index - 1];
37             lst[index - 1] = ent;
38         } else
39             lst[index] = ent;
40 
41         index += 1;
42     }
43 
44     return index;
45 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
