.TH "src/syscall/chown.c" 3 "Dom 9 Nov 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/chown.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br

.SS "Funzioni"

.in +1c
.ti -1c
.RI "int \fBsys_chown\fP (char *filename, uid_t owner, gid_t group)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_chown\fP, 21)"
.br
.in -1c
.SS "Variabili"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.in -1c
.SH "Documentazione delle funzioni"
.PP 
.SS "int sys_chown (char *filename, uid_towner, gid_tgroup)"

.PP
Definizione alla linea 13 del file chown\&.c\&.
.PP
Referenzia errno, task::fd, fs_chown(), im_superuser(), kprintf, e sys_open()\&.
.PP
.nf
13                                                         {
14     if(!im_superuser()) {
15         kprintf("sys_chown: only superuser allow to use this function\&.");
16         
17         errno = EACCES;
18         return -1;
19     }
20     
21     
22     int fd = sys_open(filename, O_RDONLY, 0644);
23     if(fd < 0) {
24         kprintf("sys_chown: %s\&.", strerror(errno));
25         return -1;
26     }
27     
28     inode_t* ino = current_task->fd[fd];
29     return fs_chown(ino, owner, group);
30 }
.fi
.SS "SYSCALL (\fBsys_chown\fP, 21)"

.SH "Documentazione delle variabili"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Definizione alla linea 33 del file sched\&.c\&.
.SH "Autore"
.PP 
Generato automaticamente da Doxygen per aPlus a partire dal codice sorgente\&.
