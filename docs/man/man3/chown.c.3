.TH "src/syscall/chown.c" 3 "Sun Nov 16 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/chown.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_chown\fP (char *filename, uid_t owner, gid_t group)"
.br
.RI "\fIChanges the ownership of the file specified by pathname, which is dereferenced if it is a symbolic link\&. \fP"
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_chown\fP, 21)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_chown (char *filename, uid_towner, gid_tgroup)"

.PP
Changes the ownership of the file specified by pathname, which is dereferenced if it is a symbolic link\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP 
.br
\fIowner\fP 
.br
\fIgroup\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
On success, zero is returned\&. On error, âˆ’1 is returned, and errno is set appropriately\&. 
.RE
.PP

.PP
Definition at line 21 of file chown\&.c\&.
.PP
References errno, task::fd, fs_chown(), im_superuser(), kprintf(), and sys_open()\&.
.PP
.nf
21                                                         {
22     if(!im_superuser()) {
23         kprintf("sys_chown: only superuser allow to use this function\&.");
24         
25         errno = EACCES;
26         return -1;
27     }
28     
29     
30     int fd = sys_open(filename, O_RDONLY, 0644);
31     if(fd < 0)
32         return -1;
33     
34     
35     inode_t* ino = current_task->fd[fd];
36     return fs_chown(ino, owner, group);
37 }
.fi
.SS "SYSCALL (\fBsys_chown\fP, 21)"

.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 37 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
