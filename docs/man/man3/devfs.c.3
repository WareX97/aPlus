.TH "src/fs/devfs.c" 3 "Dom 9 Nov 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/fs/devfs.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br

.SS "Funzioni"

.in +1c
.ti -1c
.RI "struct \fBinode\fP * \fBdevfs_creat\fP (struct \fBinode\fP *\fBinode\fP, char *\fBname\fP, mode_t mode)"
.br
.ti -1c
.RI "\fBinode_t\fP * \fBdevfs_mount\fP ()"
.br
.in -1c
.SS "Variabili"

.in +1c
.ti -1c
.RI "\fBinode_t\fP * \fBvfs_root\fP"
.br
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.ti -1c
.RI "\fBinode_t\fP * \fBdevfs\fP"
.br
.in -1c
.SH "Documentazione delle funzioni"
.PP 
.SS "struct \fBinode\fP* devfs_creat (struct \fBinode\fP *inode, char *name, mode_tmode)"

.PP
Definizione alla linea 24 del file devfs\&.c\&.
.PP
Referenzia inode::chown, inode::creat, inode::dev, inode::finddir, inode::flush, inode::gid, task::gid, inode::ino, inode::ioctl, kmalloc(), inode::link, inode::mode, inode::name, inode::nlink, inode::parent, inode::rdev, inode::read, inode::readdir, inode::rename, inode::size, inode::uid, task::uid, inode::unlink, vfs_map(), vfs_mapped(), e inode::write\&.
.PP
.nf
24                                                                          {
25     if((void*) vfs_mapped(inode, name) != NULL)
26         return NULL;
27         
28     inode_t* ino = (inode_t*) kmalloc(sizeof(inode_t));
29     strcpy(ino->name, name);
30     
31     ino->dev = inode->dev;
32     ino->ino = 0;
33     ino->mode = mode;
34     ino->nlink = 0;
35     ino->uid = current_task->uid;
36     ino->gid = current_task->gid;
37     ino->rdev = ino->rdev;
38     ino->size = (size_t) 0;
39     //ino->atime = ino->ctime = ino->mtime = time(NULL);
40     ino->parent = inode;
41     ino->link = NULL;
42     
43     ino->read = NULL;
44     ino->write = NULL;
45     ino->readdir = NULL;
46     ino->finddir = NULL;
47     ino->creat = NULL;
48     ino->rename = NULL;
49     ino->unlink = NULL;
50     ino->chown = NULL;
51     ino->flush = NULL;
52     ino->ioctl = NULL;
53     
54     vfs_map(ino);
55     
56     return ino;
57 }
.fi
.SS "\fBinode_t\fP* devfs_mount ()"

.PP
Definizione alla linea 60 del file devfs\&.c\&.
.PP
Referenzia inode::chown, inode::creat, inode::dev, devfs, devfs_creat(), inode::finddir, inode::flush, inode::gid, GID_ROOT, inode::ino, inode::ioctl, kmalloc(), inode::link, inode::mode, inode::name, inode::nlink, inode::parent, inode::rdev, inode::read, inode::readdir, inode::rename, inode::size, inode::uid, UID_ROOT, inode::unlink, vfs_root, e inode::write\&.
.PP
.nf
60                        {
61     
62     devfs = (inode_t*) kmalloc(sizeof(inode_t));
63     strcpy(devfs->name, "dev");
64     
65     devfs->dev = (dev_t) 0;
66     devfs->ino = (ino_t) 0;
67     devfs->mode = S_IFDIR;
68     devfs->nlink = 0;
69     devfs->uid = UID_ROOT;
70     devfs->gid = GID_ROOT;
71     devfs->rdev = (dev_t) 0;
72     devfs->size = (size_t) 0;
73     //devfs->atime = devfs->ctime = devfs->mtime = time(NULL);
74     devfs->parent = vfs_root;
75     devfs->link = NULL;
76     
77     devfs->read = NULL;
78     devfs->write = NULL;
79     devfs->readdir = NULL;
80     devfs->finddir = NULL;
81     devfs->creat = devfs_creat;
82     devfs->rename = NULL;
83     devfs->unlink = NULL;
84     devfs->chown = NULL;
85     devfs->flush = NULL;
86     devfs->ioctl = NULL;
87     
88     return devfs;
89 }
.fi
.SH "Documentazione delle variabili"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Definizione alla linea 33 del file sched\&.c\&.
.SS "\fBinode_t\fP* devfs"

.PP
Definizione alla linea 20 del file devfs\&.c\&.
.SS "\fBinode_t\fP* vfs_root"

.PP
Definizione alla linea 19 del file vfs\&.c\&.
.SH "Autore"
.PP 
Generato automaticamente da Doxygen per aPlus a partire dal codice sorgente\&.
