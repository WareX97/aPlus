.TH "usr/src/libpthread/src/pthread_join.c" 3 "Sun Nov 9 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libpthread/src/pthread_join.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <sched\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include 'pthread_internal\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPUBLIC\fP int \fBpthread_join\fP (\fBpthread_t\fP thread, void **value_ptr)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBPUBLIC\fP int pthread_join (\fBpthread_t\fPthread, void **value_ptr)"

.PP
Definition at line 8 of file pthread_join\&.c\&.
.PP
References pthread_once::done, errno, pthread_context::exitval, pthread_context::once, and sched_yield()\&.
.PP
.nf
8                                                             {
9     if(!thread) {
10         errno = EINVAL;
11         return 1;
12     }
13 
14     pthread_context_t* ctx = (pthread_context_t*) thread;
15     while(ctx->once\&.done == 0)
16         sched_yield();
17 
18     if(value_ptr)
19         *value_ptr = ctx->exitval;
20 
21     return 0;
22 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
