.TH "src/syscall/getgroups.c" 3 "Fri Nov 14 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/getgroups.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_getgroups\fP (int \fBlength\fP, gid_t *\fBlist\fP)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_getgroups\fP, 81)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.ti -1c
.RI "static gid_t \fB__groups\fP []"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_getgroups (intlength, gid_t *list)"

.PP
Definition at line 18 of file getgroups\&.c\&.
.PP
References __groups, and errno\&.
.PP
.nf
18                                            {
19     if(length < 0) {
20         errno = EINVAL;
21         return -1;
22     }
23 
24     if(list == NULL) {
25         errno = EINVAL;
26         return -1;
27     }
28 
29     if(length == 0)
30         return sizeof(__groups);
31 
32     int i = 0;
33     for(i = 0; i < sizeof(__groups); i++) {
34         if(i >= length)
35             break;
36 
37         list[i] = __groups[i];
38     }
39 
40     return i;
41 }
.fi
.SS "SYSCALL (\fBsys_getgroups\fP, 81)"

.SH "Variable Documentation"
.PP 
.SS "gid_t __groups[]\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    GID_SUPERUSER, 0
}
.fi
.PP
Definition at line 14 of file getgroups\&.c\&.
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 35 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
