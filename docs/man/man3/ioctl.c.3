.TH "src/syscall/ioctl.c" 3 "Fri Nov 14 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/ioctl.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_ioctl\fP (int fd, int req, void *buf)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_ioctl\fP, 20)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_ioctl (intfd, intreq, void *buf)"

.PP
Definition at line 15 of file ioctl\&.c\&.
.PP
References errno, task::fd, and fs_ioctl()\&.
.PP
.nf
15                                           {
16 
17     inode_t* ino = current_task->fd[fd];
18     if(!ino) {
19         errno = EBADF;
20         return -1;
21     }
22     
23 
24     return fs_ioctl(ino, req, buf);
25 }
.fi
.SS "SYSCALL (\fBsys_ioctl\fP, 20)"

.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 35 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
