.TH "src/syscall/lseek.c" 3 "Sun Nov 16 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/lseek.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_lseek\fP (int fd, int pos, int dir)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_lseek\fP, 9)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_lseek (intfd, intpos, intdir)"

.PP
Definition at line 18 of file lseek\&.c\&.
.PP
References errno, task::fd, inode::position, inode::size, and TASK_MAX_FD\&.
.PP
.nf
18                                         {
19 
20     if(fd < 0 || fd > TASK_MAX_FD) {
21         errno = EBADF;
22         return -1;
23     }
24     
25 
26     inode_t* ino = current_task->fd[fd];
27     if(!ino) {
28         errno = EBADF;
29         return -1;
30     }
31     
32     
33     if(pos > ino->size)
34         pos = ino->size;
35     
36     switch(dir) {
37         case SEEK_SET:
38             ino->position = pos;
39             break;
40         case SEEK_END:
41             ino->position = ino->size - pos;
42             break;
43         case SEEK_CUR:
44             ino->position = (ino->position + pos > ino->size ? ino->size : ino->position + pos);
45             break;
46         default:
47             errno = EINVAL;
48             return -1;
49     }
50     
51     return ino->position;
52 }
.fi
.SS "SYSCALL (\fBsys_lseek\fP, 9)"

.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 37 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
