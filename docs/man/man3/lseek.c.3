.TH "src/syscall/lseek.c" 3 "Wed Nov 12 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/lseek.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_lseek\fP (int fd, int pos, int dir)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_lseek\fP, 9)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_lseek (intfd, intpos, intdir)"

.PP
Definition at line 18 of file lseek\&.c\&.
.PP
References errno, task::fd, inode::position, and inode::size\&.
.PP
.nf
18                                         {
19     inode_t* ino = current_task->fd[fd];
20     if(!ino) {
21         errno = EBADF;
22         return -1;
23     }
24     
25     
26     if(pos > ino->size)
27         pos = ino->size;
28     
29     switch(dir) {
30         case SEEK_SET:
31             ino->position = pos;
32             break;
33         case SEEK_END:
34             ino->position = ino->size - pos;
35             break;
36         case SEEK_CUR:
37             ino->position = (ino->position + pos > ino->size ? ino->size : ino->position + pos);
38             break;
39         default:
40             errno = EINVAL;
41             return -1;
42     }
43     
44     return ino->position;
45 }
.fi
.SS "SYSCALL (\fBsys_lseek\fP, 9)"

.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 35 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
