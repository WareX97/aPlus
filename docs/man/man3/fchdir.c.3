.TH "src/syscall/fchdir.c" 3 "Sun Nov 16 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/fchdir.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBsys_fchdir\fP (int fd)"
.br
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_fchdir\fP, 29)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "int sys_fchdir (intfd)"

.PP
Definition at line 15 of file fchdir\&.c\&.
.PP
References task::cwd, errno, task::fd, and TASK_MAX_FD\&.
.PP
.nf
15                        {
16     if(fd < 0 || fd > TASK_MAX_FD) {
17         errno = EBADF;
18         return -1;
19     }
20 
21 
22     if(current_task->fd[fd] == NULL) {
23         errno = EBADF;
24         return -1;
25     }
26 
27 
28     current_task->cwd = current_task->fd[fd];
29     return 0;
30 }
.fi
.SS "SYSCALL (\fBsys_fchdir\fP, 29)"

.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 37 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
