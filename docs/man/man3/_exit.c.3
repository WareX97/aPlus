.TH "src/syscall/_exit.c" 3 "Sun Nov 9 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/syscall/_exit.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/syscall\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsys_exit\fP (int status)"
.br
.RI "\fITerminates the process normally by returning control to the host environment, but without performing any of the regular cleanup tasks for terminating processes (as function exit does)\&.
.br
 No object destructors, nor functions registered by atexit or at_quick_exit are called\&. \fP"
.ti -1c
.RI "\fBSYSCALL\fP (\fBsys_exit\fP, 0)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void sys_exit (intstatus)"

.PP
Terminates the process normally by returning control to the host environment, but without performing any of the regular cleanup tasks for terminating processes (as function exit does)\&.
.br
 No object destructors, nor functions registered by atexit or at_quick_exit are called\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstatus\fP Status code\&.
.br
 If this is 0 or EXIT_SUCCESS, it indicates success\&.
.br
 If it is EXIT_FAILURE, it indicates failure\&.
.br
.RE
.PP

.PP
Definition at line 16 of file _exit\&.c\&.
.PP
References schedule_exit()\&.
.PP
.nf
16                           {
17     schedule_exit(status);
18 }
.fi
.SS "SYSCALL (\fBsys_exit\fP, 0)"

.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
