.TH "usr/src/libpthread/src/pthread_detach.c" 3 "Dom 9 Nov 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libpthread/src/pthread_detach.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include <signal\&.h>\fP
.br
\fC#include <pthread\&.h>\fP
.br
\fC#include 'pthread_internal\&.h'\fP
.br

.SS "Funzioni"

.in +1c
.ti -1c
.RI "\fBPUBLIC\fP int \fBpthread_detach\fP (\fBpthread_t\fP thread)"
.br
.in -1c
.SS "Variabili"

.in +1c
.ti -1c
.RI "\fBEXTERN\fP \fBuint32_t\fP \fB__pthread_counts\fP"
.br
.ti -1c
.RI "\fBEXTERN\fP \fBpthread_context_t\fP * \fB__pthread_queue\fP"
.br
.in -1c
.SH "Documentazione delle funzioni"
.PP 
.SS "\fBPUBLIC\fP int pthread_detach (\fBpthread_t\fPthread)"

.PP
Definizione alla linea 12 del file pthread_detach\&.c\&.
.PP
Referenzia __os_thread_kill, __pthread_queue, pthread_once::done, errno, pthread_context::once, e pthread_context::tid\&.
.PP
.nf
12                                             {
13     if(!thread) {
14         errno = EINVAL;
15         return 1;
16     }
17 
18     if(!__pthread_queue) {
19         errno = ESRCH;
20         return 1;
21     }
22 
23     pthread_context_t* ctx = (pthread_context_t*) thread;
24     if(__os_thread_kill(ctx->tid, SIGKILL) == 0)
25         ctx->once\&.done = 1;
26     else {
27         errno = ESRCH;
28         return 1;
29     }
30 
31     __pthread_counts -= 1;
32     pthread_context_t* tmp = __pthread_queue;
33 
34     if(tmp->next) {
35         while(tmp->next) {
36             if(tmp->next == ctx) {
37                 tmp->next = ctx->next;
38                 break;
39             }
40 
41             tmp = tmp->next;
42         }
43     } else {
44         if(__pthread_queue == ctx)
45             __pthread_queue = 0;
46     }
47 
48     return 0;
49 }
.fi
.SH "Documentazione delle variabili"
.PP 
.SS "\fBEXTERN\fP \fBuint32_t\fP __pthread_counts"

.PP
Definizione alla linea 9 del file pthread_detach\&.c\&.
.SS "\fBEXTERN\fP \fBpthread_context_t\fP* __pthread_queue"

.PP
Definizione alla linea 10 del file pthread_detach\&.c\&.
.SH "Autore"
.PP 
Generato automaticamente da Doxygen per aPlus a partire dal codice sorgente\&.
