.TH "usr/src/libpthread/src/pthread_queue.c" 3 "Sun Nov 16 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libpthread/src/pthread_queue.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'pthread_internal\&.h'\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPRIVATE\fP void \fB__pthread_dnit\fP ()"
.br
.ti -1c
.RI "\fBPUBLIC\fP void \fB__pthread_init_queue\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBPRIVATE\fP \fBpthread_context_t\fP \fB__current_thread\fP"
.br
.ti -1c
.RI "\fBPUBLIC\fP \fBpthread_context_t\fP * \fB__pthread_queue\fP = &\fB__current_thread\fP"
.br
.ti -1c
.RI "\fBPUBLIC\fP \fBuint32_t\fP \fB__pthread_counts\fP = 1"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBPRIVATE\fP void __pthread_dnit ()"

.PP
Definition at line 13 of file pthread_queue\&.c\&.
.PP
References __current_thread, __pthread_queue, and pthread_detach()\&.
.PP
.nf
13                               {
14     pthread_context_t* tmp = __pthread_queue;
15 
16     while(tmp) {
17         if(tmp != &__current_thread)
18             pthread_detach((pthread_t) tmp);
19         
20         tmp = tmp->next;
21     }
22 }
.fi
.SS "\fBPUBLIC\fP void __pthread_init_queue (void)"

.PP
Definition at line 24 of file pthread_queue\&.c\&.
.PP
References __current_thread, __os_gettid, __pthread_dnit(), pthread_context::attr, pthread_context::cond, pthread_once::done, pthread_context::entry, pthread_context::exitval, pthread_context::next, pthread_context::once, pthread_context::param, pthread_once::started, and pthread_context::tid\&.
.PP
.nf
24                                    {
25     static int init = 0;
26     if(init)
27         return;
28 
29     init++;
30 
31     __current_thread\&.tid = __os_gettid();
32     __current_thread\&.entry = NULL;
33     __current_thread\&.param = NULL;
34     __current_thread\&.exitval = NULL;
35     __current_thread\&.once\&.done = 0;
36     __current_thread\&.once\&.started = -1;
37     __current_thread\&.cond = NULL;
38     __current_thread\&.next = NULL;
39 
40     memset(&__current_thread\&.attr, 0, sizeof(pthread_attr_t));
41 
42     atexit(__pthread_dnit);
43 }
.fi
.SH "Variable Documentation"
.PP 
.SS "\fBPRIVATE\fP \fBpthread_context_t\fP __current_thread"

.PP
Definition at line 7 of file pthread_queue\&.c\&.
.SS "\fBPUBLIC\fP \fBuint32_t\fP __pthread_counts = 1"

.PP
Definition at line 10 of file pthread_queue\&.c\&.
.SS "\fBPUBLIC\fP \fBpthread_context_t\fP* __pthread_queue = &\fB__current_thread\fP"

.PP
Definition at line 9 of file pthread_queue\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
