.TH "usr/src/libposix/src/execlp.c" 3 "Fri Nov 14 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libposix/src/execlp.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <_ansi\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <varargs\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fB_execve\fP (const char *filename, char *const args[], char *const env[])"
.br
.ti -1c
.RI "int \fB_DEFUN\fP (execlp,(path, arg0, va_alist), _CONST char *path _AND _CONST char *arg0 _AND va_dcl)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int _DEFUN (execlp, (path, arg0, va_alist), _CONST char *path _AND _CONST char *arg0 _ANDva_dcl)"

.PP
Definition at line 25 of file execlp\&.c\&.
.PP
.nf
32 {
33   int i;
34   va_list args;
35   _CONST char *argv[256];
36 
37   va_start (args, arg0);
38   argv[0] = arg0;
39   i = 1;
40   do
41       argv[i] = va_arg (args, _CONST char *);
42   while (argv[i++] != NULL);
43   va_end (args);
44 
45   return execvp (path, (char * _CONST *) argv);
46 }
.fi
.SS "int _execve (const char *filename, char *constargs[], char *constenv[])"

.PP
Definition at line 8 of file _execve\&.c\&.
.PP
.nf
8                                                                          {
9     return execve(filename, args, env);
10 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
