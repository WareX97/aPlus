.TH "usr/src/libposix/src/execl.c" 3 "Sun Nov 16 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
usr/src/libposix/src/execl.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <_ansi\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <varargs\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fB_execve\fP (const char *filename, char *const args[], char *const env[])"
.br
.ti -1c
.RI "int \fB_DEFUN\fP (execl,(path, arg0, va_alist), _CONST char *path _AND _CONST char *arg0 _AND va_dcl)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static char *** \fBp_environ\fP = &\fBenviron\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int _DEFUN (execl, (path, arg0, va_alist), _CONST char *path _AND _CONST char *arg0 _ANDva_dcl)"

.PP
Definition at line 29 of file execl\&.c\&.
.PP
References _execve(), and p_environ\&.
.PP
.nf
36 {
37   int i;
38   va_list args;
39   _CONST char *argv[256];
40 
41   va_start (args, arg0);
42   argv[0] = arg0;
43   i = 1;
44   do
45       argv[i] = va_arg (args, _CONST char *);
46   while (argv[i++] != NULL);
47   va_end (args);
48 
49   return _execve (path, (char * _CONST  *) argv, *p_environ);
50 }
.fi
.SS "int _execve (const char *filename, char *constargs[], char *constenv[])"

.PP
Definition at line 8 of file _execve\&.c\&.
.PP
.nf
8                                                                          {
9     return execve(filename, args, env);
10 }
.fi
.SH "Variable Documentation"
.PP 
.SS "char*** p_environ = &\fBenviron\fP\fC [static]\fP"

.PP
Definition at line 12 of file execl\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
