.TH "src/fs/ramdev.c" 3 "Sun Nov 9 2014" "Version 0.1" "aPlus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/fs/ramdev.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <aplus\&.h>\fP
.br
\fC#include <aplus/fs\&.h>\fP
.br
\fC#include <aplus/task\&.h>\fP
.br
\fC#include <aplus/bufio\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBramdev_read\fP (\fBinode_t\fP *ino, char *buf, int \fBsize\fP)"
.br
.ti -1c
.RI "int \fBramdev_write\fP (\fBinode_t\fP *ino, char *buf, int \fBsize\fP)"
.br
.ti -1c
.RI "void \fBramdev_flush\fP (\fBinode_t\fP *ino)"
.br
.ti -1c
.RI "\fBinode_t\fP * \fBmkramdev\fP (char *path, \fBuint32_t\fP addr, \fBuint32_t\fP \fBsize\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBtask_t\fP * \fBcurrent_task\fP"
.br
.RI "\fICurrent task address\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBinode_t\fP* mkramdev (char *path, \fBuint32_t\fPaddr, \fBuint32_t\fPsize)"

.PP
Definition at line 76 of file ramdev\&.c\&.
.PP
References bufio_alloc_raw(), task::fd, inode::flush, ramdev_flush(), ramdev_read(), ramdev_write(), inode::read, inode::size, size, sys_close(), sys_open(), inode::userdata, and inode::write\&.
.PP
.nf
76                                                             {
77     int fd = sys_open(path, O_CREAT | O_EXCL | O_TRUNC, S_IFCHR);
78     if(fd < 0)
79         return NULL;
80 
81     inode_t* ino = (inode_t*) current_task->fd[fd];
82     sys_close(fd);
83 
84     ino->read = ramdev_read;
85     ino->write = ramdev_write;
86     ino->flush = ramdev_flush;
87     ino->userdata = (void*) bufio_alloc_raw((void*) addr, size);
88     ino->size = size;
89 
90 
91     return ino;
92 }
.fi
.SS "void ramdev_flush (\fBinode_t\fP *ino)"

.PP
Definition at line 65 of file ramdev\&.c\&.
.PP
References bufio_free(), and inode::userdata\&.
.PP
.nf
65                                 {
66     if(!ino)
67         return;
68 
69     if(!ino->userdata)
70         return;
71 
72     bufio_free(ino->userdata);
73 }
.fi
.SS "int ramdev_read (\fBinode_t\fP *ino, char *buf, intsize)"

.PP
Definition at line 15 of file ramdev\&.c\&.
.PP
References bufio_read(), bufio_seek(), inode::position, inode::size, size, and inode::userdata\&.
.PP
.nf
15                                                    {
16     if(!ino)
17         return 0;
18 
19     if(!buf)
20         return 0;
21 
22     if(size > ino->size)
23         size = ino->size;
24 
25     if(ino->position > ino->size)
26         ino->position = ino->size;
27 
28     if(ino->position + size > ino->size)
29         size = ino->size - ino->position;
30 
31     if(!size)
32         return 0;
33 
34     bufio_seek(ino->userdata, ino->position, SEEK_SET);
35     size = bufio_read(ino->userdata, buf, size);
36     ino->position += size;
37     return size;
38 }
.fi
.SS "int ramdev_write (\fBinode_t\fP *ino, char *buf, intsize)"

.PP
Definition at line 40 of file ramdev\&.c\&.
.PP
References bufio_seek(), bufio_write(), inode::position, inode::size, size, and inode::userdata\&.
.PP
.nf
40                                                     {
41     if(!ino)
42         return 0;
43 
44     if(!buf)
45         return 0;
46 
47     if(size > ino->size)
48         size = ino->size;
49 
50     if(ino->position > ino->size)
51         ino->position = ino->size;
52 
53     if(ino->position + size > ino->size)
54         size = ino->size - ino->position;
55 
56     if(!size)
57         return 0;
58 
59     bufio_seek(ino->userdata, ino->position, SEEK_SET);
60     size = bufio_write(ino->userdata, buf, size);
61     ino->position += size;
62     return size;
63 }
.fi
.SH "Variable Documentation"
.PP 
.SS "\fBtask_t\fP* current_task"

.PP
Current task address\&. 
.PP
Definition at line 35 of file sched\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for aPlus from the source code\&.
