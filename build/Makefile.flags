
DEFINES         := -DKERNEL
WARNINGS        := -Wall -Wno-discarded-qualifiers
LIBS            := -laplus -lc -lm -lgcc

CFLAGS          := $(DEFINES) $(WARNINGS) -c -pipe -I kernel/include -include config.h -nostdlib -std=gnu99 -O3
AFLAGS          := -c -I kernel/include -include config.h
NFLAGS          := $(DEFINES) -w-number-overflow
LDFLAGS         := -T kernel/link/$(ARCH).ld -Map $(KERNEL_NAME).map -z max-page-size=0x1000



VMM             := qemu-system-$(ARCH) -drive file=$(HDD),if=ide -m 512 -boot c -cdrom aplus.iso -d cpu_reset,guest_errors -serial stdio -s


ifeq ($(ARCH),x86_64)
CFLAGS          += -mno-red-zone -mcmodel=kernel -masm=intel
AFLAGS          += -masm=intel
NFLAGS          += -felf64
VMM             += -M accel="tcg" -vga std -soundhw ac97 -device virtio-net,netdev=net0 -netdev user,id=net0,hostfwd=udp::5000-:5000 -no-kvm-irqchip
endif

ifeq ($(ARCH),i386)
LIBS            += -ldisasm
AFLAGS          += -masm=intel
CFLAGS          += -masm=intel
NFLAGS          += -felf
VMM             += -M accel="tcg" -vga std -soundhw ac97 -device pcnet,netdev=net0 -netdev user,id=net0,hostfwd=udp::5000-:5000 -no-kvm-irqchip
#VMM                := echo "c" | bochs -q -f bochs.conf
endif

ifeq ($(ARCH),arm)
AFLAGS          += -mcpu=arm1176jzf-s
CFLAGS          += -mcpu=arm1176jzf-s -fpic -mfloat-abi=softfp
VMM             := qemu-system-arm -M raspi -cpu arm1176jzf-s -m 256 -kernel $(KERNEL_OUTPUT) -serial stdio
endif

